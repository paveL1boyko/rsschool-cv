    {
  "components": {
    "schemas": {
      "3de297c.GiftActivateReq": {
        "example": {
          "gift_code": "AER4-ATRB-4BER"
        },
        "properties": {
          "gift_code": {
            "description": "GiftCard or GiftCode code",
            "title": "Gift Code",
            "type": "string"
          }
        },
        "required": [
          "gift_code"
        ],
        "title": "GiftActivateReq",
        "type": "object"
      },
      "3de297c.GiftCardActivateRes": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "examples": {
          "Gift code used": {
            "value": {
              "error": {
                "code": 409,
                "debug_text": "Gift code already used",
                "description": "DATA_EXIST"
              },
              "response": {}
            }
          },
          "Gift not found": {
            "value": {
              "error": {
                "code": 404,
                "debug_text": "Wrong gift code",
                "description": "NOT_FOUND"
              },
              "response": {}
            }
          },
          "Subscription error": {
            "value": {
              "error": {
                "code": 520,
                "debug_text": "Error in subscription create logic",
                "description": "SUBSCRIPTION_ERROR"
              },
              "response": {}
            }
          },
          "Success": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {}
            }
          },
          "Validation error": {
            "value": {
              "error": {
                "code": 500,
                "debug_text": "1 validation error for .....",
                "description": "FIELDS_VALIDATION_ERROR"
              },
              "response": {}
            }
          }
        },
        "properties": {
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/3de297c.GiftCardActivateRes.ResponseErrorSer"
              },
              {
                "type": "object"
              }
            ],
            "default": {
              "code": 0,
              "debug_text": "NONE",
              "description": "NONE"
            },
            "description": "Response error detail description",
            "title": "Error"
          },
          "response": {
            "default": {},
            "description": "Response data field",
            "title": "Response",
            "type": "object"
          }
        },
        "title": "GiftCardActivateRes",
        "type": "object"
      },
      "3de297c.GiftCardActivateRes.ResponseErrorSer": {
        "description": "Class prepare basic `Config` for other Pydantic models.\nUse for all default service models if need updated `Config`",
        "properties": {
          "code": {
            "default": 0,
            "description": "Contains error code. If `0` - all is OK",
            "title": "Code",
            "type": "integer"
          },
          "debug_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "object"
              }
            ],
            "default": "NONE",
            "description": "Contains custom debug text, if `code=500` field contains dict with `{field_name: ERROR_CODE_NAME}`",
            "title": "Debug Text"
          },
          "description": {
            "default": "NONE",
            "description": "Contains error code name",
            "title": "Description",
            "type": "string"
          }
        },
        "title": "ResponseErrorSer",
        "type": "object"
      },
      "3de297c.GiftCardCreateRes": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "examples": {
          "Subscription error": {
            "value": {
              "error": {
                "code": 520,
                "debug_text": "Error in subscription create logic",
                "description": "SUBSCRIPTION_ERROR"
              },
              "response": {}
            }
          },
          "Subscription error. INVALID_CARD_NUMBER": {
            "value": {
              "error": {
                "code": 520,
                "debug_text": "Your card number is not valid.Please update your card number.",
                "description": "INVALID_CARD_NUMBER"
              },
              "response": {}
            }
          },
          "Success": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "pdf_link": "https://dev-profile-file.loona.dev/hash_test/test_new.pdf"
              }
            }
          },
          "Transaction error": {
            "value": {
              "error": {
                "code": 522,
                "debug_text": "Transaction error while purchase create...",
                "description": "TRANSACTION_ERROR"
              },
              "response": {
                "three_d_secure_action_token_id": "STZUxb_QYbpzBydwROMf3Q"
              }
            }
          },
          "Validation error": {
            "value": {
              "error": {
                "code": 500,
                "debug_text": "1 validation error for .....",
                "description": "FIELDS_VALIDATION_ERROR"
              },
              "response": {}
            }
          }
        },
        "properties": {
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/3de297c.GiftCardCreateRes.ResponseErrorSer"
              },
              {
                "type": "object"
              }
            ],
            "default": {
              "code": 0,
              "debug_text": "NONE",
              "description": "NONE"
            },
            "description": "Response error detail description",
            "title": "Error"
          },
          "response": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "$ref": "#/components/schemas/3de297c.GiftCardCreateRes.GiftCardPdfSer"
              }
            ],
            "description": "Response data field",
            "title": "Response"
          }
        },
        "required": [
          "response"
        ],
        "title": "GiftCardCreateRes",
        "type": "object"
      },
      "3de297c.GiftCardCreateRes.GiftCardPdfSer": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "properties": {
          "pdf_link": {
            "description": "Generated PDF file link",
            "title": "Pdf Link",
            "type": "string"
          }
        },
        "required": [
          "pdf_link"
        ],
        "title": "GiftCardPdfSer",
        "type": "object"
      },
      "3de297c.GiftCardCreateRes.ResponseErrorSer": {
        "description": "Class prepare basic `Config` for other Pydantic models.\nUse for all default service models if need updated `Config`",
        "properties": {
          "code": {
            "default": 0,
            "description": "Contains error code. If `0` - all is OK",
            "title": "Code",
            "type": "integer"
          },
          "debug_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "object"
              }
            ],
            "default": "NONE",
            "description": "Contains custom debug text, if `code=500` field contains dict with `{field_name: ERROR_CODE_NAME}`",
            "title": "Debug Text"
          },
          "description": {
            "default": "NONE",
            "description": "Contains error code name",
            "title": "Description",
            "type": "string"
          }
        },
        "title": "ResponseErrorSer",
        "type": "object"
      },
      "3de297c.GiftCardsListRes": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "examples": {
          "Empty items list": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "items": {}
              }
            }
          },
          "Success": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "items": {
                  "gift-code-lifetime": {
                    "code": "gift-code-lifetime",
                    "currencies": [
                      {
                        "currency": "USD",
                        "unit_amount": 89.99
                      }
                    ],
                    "description": "Some long description for lifetime tests Loona GiftCard",
                    "name": "[TEST] gift lifetime"
                  },
                  "gift-code-yearly": {
                    "code": "gift-code-yearly",
                    "currencies": [
                      {
                        "currency": "USD",
                        "unit_amount": 39.99
                      }
                    ],
                    "description": "Some long description for tests",
                    "name": "[TEST] gift yearly"
                  }
                }
              }
            }
          }
        },
        "properties": {
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/3de297c.GiftCardsListRes.ResponseErrorSer"
              },
              {
                "type": "object"
              }
            ],
            "default": {
              "code": 0,
              "debug_text": "NONE",
              "description": "NONE"
            },
            "description": "Response error detail description",
            "title": "Error"
          },
          "response": {
            "default": {},
            "description": "Response contains User info, User OAuth types",
            "title": "Response",
            "type": "object"
          }
        },
        "title": "GiftCardsListRes",
        "type": "object"
      },
      "3de297c.GiftCardsListRes.ResponseErrorSer": {
        "description": "Class prepare basic `Config` for other Pydantic models.\nUse for all default service models if need updated `Config`",
        "properties": {
          "code": {
            "default": 0,
            "description": "Contains error code. If `0` - all is OK",
            "title": "Code",
            "type": "integer"
          },
          "debug_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "object"
              }
            ],
            "default": "NONE",
            "description": "Contains custom debug text, if `code=500` field contains dict with `{field_name: ERROR_CODE_NAME}`",
            "title": "Debug Text"
          },
          "description": {
            "default": "NONE",
            "description": "Contains error code name",
            "title": "Description",
            "type": "string"
          }
        },
        "title": "ResponseErrorSer",
        "type": "object"
      },
      "3de297c.PlanBundleNameQuery": {
        "properties": {
          "bundle_name": {
            "description": "Query parameters",
            "title": "Bundle Name",
            "type": "string"
          }
        },
        "title": "PlanBundleNameQuery",
        "type": "object"
      },
      "3de297c.SubscriptionRes": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "examples": {
          "Already have a subscription": {
            "value": {
              "error": {
                "code": 409,
                "debug_text": "1st subscription: Base you already have a subscription to this plan.",
                "description": "DATA_EXIST"
              },
              "response": {}
            }
          },
          "Subscription error": {
            "value": {
              "error": {
                "code": 520,
                "debug_text": "Error in subscription create logic",
                "description": "SUBSCRIPTION_ERROR"
              },
              "response": {}
            }
          },
          "Subscription error. INVALID_CARD_NUMBER": {
            "value": {
              "error": {
                "code": 520,
                "debug_text": "Your card number is not valid.Please update your card number.",
                "description": "INVALID_CARD_NUMBER"
              },
              "response": {}
            }
          },
          "Success": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "purchase": {
                  "created_dt": "2020-11-19T02:06:26",
                  "event_status": "active",
                  "expire_dt": "2020-11-26T02:06:24",
                  "is_active": true,
                  "order_id": "in_1Hp2XUCLpkOhWmMolQBrwxI4",
                  "product_id": "price_1HowfGCLpkOhWmMoxHrYUegx",
                  "purchase_token": "sub_IPsIZfJVsVokKS",
                  "status": "other",
                  "type": "recurly",
                  "updated_dt": "2020-11-19T02:06:26"
                }
              }
            }
          },
          "Transaction error": {
            "value": {
              "error": {
                "code": 522,
                "debug_text": "Transaction error while purchase create...",
                "description": "TRANSACTION_ERROR"
              },
              "response": {
                "three_d_secure_action_token_id": "STZUxb_QYbpzBydwROMf3Q"
              }
            }
          },
          "Validation error": {
            "value": {
              "error": {
                "code": 500,
                "debug_text": "1 validation error for .....",
                "description": "FIELDS_VALIDATION_ERROR"
              },
              "response": {}
            }
          }
        },
        "properties": {
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/3de297c.SubscriptionRes.ResponseErrorSer"
              },
              {
                "type": "object"
              }
            ],
            "default": {
              "code": 0,
              "debug_text": "NONE",
              "description": "NONE"
            },
            "description": "Response error detail description",
            "title": "Error"
          },
          "response": {
            "allOf": [
              {
                "$ref": "#/components/schemas/3de297c.SubscriptionRes.SubscriptionSer"
              }
            ],
            "description": "SubscriptionSer",
            "title": "Response"
          }
        },
        "required": [
          "response"
        ],
        "title": "SubscriptionRes",
        "type": "object"
      },
      "3de297c.SubscriptionRes.DateISO8601": {
        "description": "An enumeration.",
        "enum": [
          "days",
          "week",
          "months",
          "quarter",
          "year",
          "yearly",
          "lifetime"
        ],
        "title": "DateISO8601",
        "type": "string"
      },
      "3de297c.SubscriptionRes.ProductTypes": {
        "description": "An enumeration.",
        "enum": [
          "consumable",
          "non_consumable",
          "auto_renewable",
          "non_renewable"
        ],
        "title": "ProductTypes",
        "type": "string"
      },
      "3de297c.SubscriptionRes.PurchaseSer": {
        "description": "Main Purchase model serializer",
        "example": {
          "autoRenewing": true,
          "created_dt": "2021-10-22T10:06:16",
          "event_status": "SUBSCRIPTION_RENEWED",
          "expire_dt": "2021-12-21T10:06:16",
          "is_active": true,
          "order_id": "GPA.3337-2222-3333-97266..5",
          "product_id": "year-extend-promo-2w-trial",
          "product_term": "year",
          "product_trial": "14",
          "product_type": "auto_renewable",
          "purchase_token": "jfklnddpnkjn---wO6CpirnA",
          "status": "renew",
          "store_type": "google",
          "type": "recurly",
          "updated_dt": "2021-10-24T14:06:16"
        },
        "examples": {
          "Google Purchase": {
            "value": {
              "autoRenewing": true,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "SUBSCRIPTION_RENEWED",
              "expire_dt": "2021-12-21T10:06:16",
              "is_active": true,
              "order_id": "GPA.3337-2222-3333-97266..5",
              "product_id": "year-extend-promo-2w-trial",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "jfklnddpnkjn---wO6CpirnA",
              "status": "renew",
              "store_type": "google",
              "type": "google",
              "updated_dt": "2021-10-24T14:06:16"
            }
          },
          "No Purchase": {
            "value": null
          },
          "Promotion Purchase": {
            "value": {
              "autoRenewing": false,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "PURCHASED",
              "expire_dt": "2021-11-21T10:06:16",
              "is_active": true,
              "order_id": "promotion_4c3ec87e-2d5d-43fe-a27d-ae8d828db7a5_0",
              "product_id": "app.loona.1m.Tester",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "promotion_af4d0306-2e80-4cfd-a304-43eaaba3e94e",
              "status": "other",
              "store_type": "promotion",
              "type": "promotion",
              "updated_dt": "2021-10-22T10:06:16"
            }
          },
          "Recurly Purchase": {
            "value": {
              "autoRenewing": true,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "NEW_SUBSCRIPTION_NOTIFICATION",
              "expire_dt": "2021-12-21T10:06:16",
              "is_active": true,
              "order_id": "orzehwbz11ge",
              "product_id": "year-extend-promo-2w-trial",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
              "status": "other",
              "store_type": "recurly",
              "type": "recurly",
              "updated_dt": "2021-10-24T14:06:16"
            }
          },
          "Recurly Purchase Canceled": {
            "value": {
              "autoRenewing": false,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "CANCELED_SUBSCRIPTION_NOTIFICATION",
              "expire_dt": "2021-10-26T10:06:16",
              "is_active": true,
              "order_id": "orzehwbz11ge",
              "product_id": "year-extend-promo-2w-trial",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
              "status": "canceled",
              "store_type": "recurly",
              "type": "recurly",
              "updated_dt": "2021-10-24T14:06:16"
            }
          }
        },
        "properties": {
          "autoRenewing": {
            "default": false,
            "description": "Auto Renewing Purchase status",
            "title": "Autorenewing",
            "type": "boolean"
          },
          "created_dt": {
            "description": "Subscription create datetime",
            "format": "date-time",
            "title": "Created Dt",
            "type": "string"
          },
          "event_status": {
            "description": "Subscription status based on payment system webhooks titles/names",
            "title": "Event Status",
            "type": "string"
          },
          "expire_dt": {
            "description": "Subscription expire datetime + 14 hours for time zones compensation",
            "format": "date-time",
            "title": "Expire Dt",
            "type": "string"
          },
          "is_active": {
            "description": "Basic system purchase active status",
            "title": "Is Active",
            "type": "boolean"
          },
          "order_id": {
            "description": "Order ID from payment system",
            "title": "Order Id",
            "type": "string"
          },
          "product_id": {
            "description": "Product name from payment system",
            "title": "Product Id",
            "type": "string"
          },
          "product_term": {
            "allOf": [
              {
                "$ref": "#/components/schemas/3de297c.SubscriptionRes.DateISO8601"
              }
            ],
            "default": "week",
            "description": "Term period for subscription"
          },
          "product_trial": {
            "default": "0",
            "description": "Trial period for product plan",
            "title": "Product Trial",
            "type": "string"
          },
          "product_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/3de297c.SubscriptionRes.ProductTypes"
              }
            ],
            "default": "non_consumable",
            "description": "Show, what can be done with the purchase"
          },
          "purchase_token": {
            "description": "Unique purchase token from payment system",
            "title": "Purchase Token",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/3de297c.SubscriptionRes.PurchaseStatus"
              }
            ],
            "default": "other",
            "description": "System purchase status"
          },
          "store_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/3de297c.SubscriptionRes.PurchaseTypes"
              }
            ],
            "default": "google",
            "description": "Purchase source type"
          },
          "type": {
            "default": "google",
            "description": "analog store type field",
            "title": "Type",
            "type": "string"
          },
          "updated_dt": {
            "description": "Subscription last change datetime",
            "format": "date-time",
            "title": "Updated Dt",
            "type": "string"
          }
        },
        "required": [
          "product_id",
          "purchase_token",
          "order_id",
          "event_status",
          "is_active",
          "created_dt",
          "updated_dt",
          "expire_dt"
        ],
        "title": "PurchaseSer",
        "type": "object"
      },
      "3de297c.SubscriptionRes.PurchaseStatus": {
        "description": "An enumeration.",
        "enum": [
          "other",
          "trial",
          "renew",
          "grace",
          "canceled",
          "expired",
          "test",
          "gift"
        ],
        "title": "PurchaseStatus",
        "type": "string"
      },
      "3de297c.SubscriptionRes.PurchaseTypes": {
        "description": "An enumeration.",
        "enum": [
          "google",
          "apple",
          "recurly",
          "custom",
          "promotion",
          "gift_card",
          "gift_code"
        ],
        "title": "PurchaseTypes",
        "type": "string"
      },
      "3de297c.SubscriptionRes.ResponseErrorSer": {
        "description": "Class prepare basic `Config` for other Pydantic models.\nUse for all default service models if need updated `Config`",
        "properties": {
          "code": {
            "default": 0,
            "description": "Contains error code. If `0` - all is OK",
            "title": "Code",
            "type": "integer"
          },
          "debug_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "object"
              }
            ],
            "default": "NONE",
            "description": "Contains custom debug text, if `code=500` field contains dict with `{field_name: ERROR_CODE_NAME}`",
            "title": "Debug Text"
          },
          "description": {
            "default": "NONE",
            "description": "Contains error code name",
            "title": "Description",
            "type": "string"
          }
        },
        "title": "ResponseErrorSer",
        "type": "object"
      },
      "3de297c.SubscriptionRes.SubscriptionSer": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "properties": {
          "purchase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/3de297c.SubscriptionRes.PurchaseSer"
              }
            ],
            "description": "PurchaseSer",
            "title": "Purchase"
          }
        },
        "required": [
          "purchase"
        ],
        "title": "SubscriptionSer",
        "type": "object"
      },
      "43c6089.BundlePlanRes": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "examples": {
          "GetPlanBundle not found": {
            "value": {
              "error": {
                "code": 404,
                "debug_text": "GetPlanBundle not found",
                "description": "NOT_FOUND"
              },
              "response": {}
            }
          },
          "Success": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "code": "test25",
                "currencies": [
                  {
                    "currency": "USD",
                    "setup_fee": 0,
                    "unit_amount": 25
                  }
                ],
                "description": "",
                "discount": 50,
                "full_price": 50,
                "id": "p9zgippkqb8d",
                "interval_length": 1,
                "interval_unit": "months",
                "name": "test25",
                "state": "active",
                "trial_length": 0,
                "trial_unit": "days"
              }
            }
          },
          "Validation error": {
            "value": {
              "error": {
                "code": 500,
                "debug_text": "1 validation error for .....",
                "description": "FIELDS_VALIDATION_ERROR"
              },
              "response": {}
            }
          }
        },
        "properties": {
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/43c6089.BundlePlanRes.ResponseErrorSer"
              },
              {
                "type": "object"
              }
            ],
            "default": {
              "code": 0,
              "debug_text": "NONE",
              "description": "NONE"
            },
            "description": "Response error detail description",
            "title": "Error"
          },
          "response": {
            "allOf": [
              {
                "$ref": "#/components/schemas/43c6089.BundlePlanRes.BundlePlanSer"
              }
            ],
            "description": "Response data field",
            "title": "Response"
          }
        },
        "required": [
          "response"
        ],
        "title": "BundlePlanRes",
        "type": "object"
      },
      "43c6089.BundlePlanRes.BundlePlanSer": {
        "description": "BundlePlanSer serializer",
        "properties": {
          "auto_renew": {
            "title": "Auto Renew",
            "type": "boolean"
          },
          "code": {
            "title": "Code",
            "type": "string"
          },
          "currencies": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/43c6089.BundlePlanRes.ProductPlanCurrenciesSer"
                },
                "type": "array"
              },
              {
                "type": "object"
              }
            ],
            "default": [
              {}
            ],
            "title": "Currencies"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "discount": {
            "description": "Discount in percent",
            "title": "Discount",
            "type": "integer"
          },
          "full_price": {
            "description": "Marketing price",
            "title": "Full Price",
            "type": "number"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "interval_length": {
            "title": "Interval Length",
            "type": "integer"
          },
          "interval_unit": {
            "$ref": "#/components/schemas/43c6089.BundlePlanRes.DateISO8601"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "state": {
            "title": "State",
            "type": "string"
          },
          "trial_length": {
            "title": "Trial Length",
            "type": "integer"
          },
          "trial_unit": {
            "$ref": "#/components/schemas/43c6089.BundlePlanRes.DateISO8601"
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "state",
          "description",
          "interval_unit",
          "interval_length",
          "trial_unit",
          "trial_length",
          "auto_renew",
          "discount",
          "full_price"
        ],
        "title": "BundlePlanSer",
        "type": "object"
      },
      "43c6089.BundlePlanRes.DateISO8601": {
        "description": "An enumeration.",
        "enum": [
          "days",
          "week",
          "months",
          "quarter",
          "year",
          "yearly",
          "lifetime"
        ],
        "title": "DateISO8601",
        "type": "string"
      },
      "43c6089.BundlePlanRes.ProductPlanCurrenciesSer": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "properties": {
          "currency": {
            "title": "Currency",
            "type": "string"
          },
          "setup_fee": {
            "title": "Setup Fee",
            "type": "number"
          },
          "unit_amount": {
            "title": "Unit Amount",
            "type": "number"
          }
        },
        "required": [
          "currency",
          "setup_fee",
          "unit_amount"
        ],
        "title": "ProductPlanCurrenciesSer",
        "type": "object"
      },
      "43c6089.BundlePlanRes.ResponseErrorSer": {
        "description": "Class prepare basic `Config` for other Pydantic models.\nUse for all default service models if need updated `Config`",
        "properties": {
          "code": {
            "default": 0,
            "description": "Contains error code. If `0` - all is OK",
            "title": "Code",
            "type": "integer"
          },
          "debug_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "object"
              }
            ],
            "default": "NONE",
            "description": "Contains custom debug text, if `code=500` field contains dict with `{field_name: ERROR_CODE_NAME}`",
            "title": "Debug Text"
          },
          "description": {
            "default": "NONE",
            "description": "Contains error code name",
            "title": "Description",
            "type": "string"
          }
        },
        "title": "ResponseErrorSer",
        "type": "object"
      },
      "43c6089.GiftCardCreateReq": {
        "example": {
          "currency": "USD",
          "email": "some_user_email@gmail.com",
          "first_name": "Augusta",
          "last_name": "Aprillla",
          "line_items": {
            "item_code": "gift-code-lifetime",
            "price": 89.99,
            "quantity": 2
          },
          "three_d_secure_token": "some token if receive 522 error",
          "user_billing_token": "user_billing_token_from_Recurly"
        },
        "properties": {
          "currency": {
            "default": "USD",
            "description": "Purchase currency",
            "title": "Currency",
            "type": "string"
          },
          "email": {
            "description": "User Email",
            "title": "Email",
            "type": "string"
          },
          "first_name": {
            "description": "User last name",
            "title": "First Name",
            "type": "string"
          },
          "last_name": {
            "description": "User first name",
            "title": "Last Name",
            "type": "string"
          },
          "line_items": {
            "allOf": [
              {
                "$ref": "#/components/schemas/43c6089.GiftCardCreateReq.GiftCardDataSer"
              }
            ],
            "description": "List gift-cards",
            "title": "Line Items"
          },
          "three_d_secure_token": {
            "description": "3D-secure token from frontend and Recurly system, if receive 522 error in previous request",
            "title": "Three D Secure Token",
            "type": "string"
          },
          "user_billing_token": {
            "description": "Unique generated user billing token from frontend and Recurly system",
            "title": "User Billing Token",
            "type": "string"
          }
        },
        "required": [
          "line_items",
          "email",
          "user_billing_token"
        ],
        "title": "GiftCardCreateReq",
        "type": "object"
      },
      "43c6089.GiftCardCreateReq.GiftCardDataSer": {
        "properties": {
          "item_code": {
            "description": "Code of gift-card from recurly",
            "title": "Item Code",
            "type": "string"
          },
          "price": {
            "description": "Price of one gift card",
            "title": "Price",
            "type": "number"
          },
          "quantity": {
            "description": "Quantity of gift card",
            "title": "Quantity",
            "type": "integer"
          }
        },
        "required": [
          "quantity",
          "item_code",
          "price"
        ],
        "title": "GiftCardDataSer",
        "type": "object"
      },
      "43c6089.ResponseSer": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "examples": {
          "Success": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {}
            }
          }
        },
        "properties": {
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/43c6089.ResponseSer.ResponseErrorSer"
              },
              {
                "type": "object"
              }
            ],
            "default": {
              "code": 0,
              "debug_text": "NONE",
              "description": "NONE"
            },
            "description": "Response error detail description",
            "title": "Error"
          },
          "response": {
            "default": {},
            "description": "Response data field",
            "title": "Response",
            "type": "object"
          }
        },
        "title": "ResponseSer",
        "type": "object"
      },
      "43c6089.ResponseSer.ResponseErrorSer": {
        "description": "Class prepare basic `Config` for other Pydantic models.\nUse for all default service models if need updated `Config`",
        "properties": {
          "code": {
            "default": 0,
            "description": "Contains error code. If `0` - all is OK",
            "title": "Code",
            "type": "integer"
          },
          "debug_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "object"
              }
            ],
            "default": "NONE",
            "description": "Contains custom debug text, if `code=500` field contains dict with `{field_name: ERROR_CODE_NAME}`",
            "title": "Debug Text"
          },
          "description": {
            "default": "NONE",
            "description": "Contains error code name",
            "title": "Description",
            "type": "string"
          }
        },
        "title": "ResponseErrorSer",
        "type": "object"
      },
      "43c6089.SubscriptionCreateNoAuthSer": {
        "example": {
          "action_source": "https://some-url/link?utm=facebook&some_other=value",
          "bundle_name": "test",
          "coupon_codes": [],
          "currency": "USD",
          "plan_code": "test",
          "subs_purchase_token": "user_578d03a6-042d-407d-97e4-3e3c20cbc86c",
          "user_billing_token": "X_wBoRuz-xobqtOJbOAvRg1"
        },
        "properties": {
          "action_source": {
            "description": "Full source URL where user try buy subscription",
            "format": "uri",
            "maxLength": 65536,
            "minLength": 1,
            "title": "Action Source",
            "type": "string"
          },
          "bundle_name": {
            "description": "model PlanBundle bundle_name",
            "title": "Bundle Name",
            "type": "string"
          },
          "coupon_codes": {
            "default": [],
            "description": "List coupon codes",
            "items": {
              "type": "string"
            },
            "title": "Coupon Codes",
            "type": "array"
          },
          "currency": {
            "default": "USD",
            "description": "Purchase currency",
            "title": "Currency",
            "type": "string"
          },
          "plan_code": {
            "description": "Plan code from Recurly system",
            "title": "Plan Code",
            "type": "string"
          },
          "subs_purchase_token": {
            "description": "User idx",
            "title": "Subs Purchase Token",
            "type": "string"
          },
          "three_d_secure_token": {
            "description": "3D-secure token from frontend and Recurly system, if receive 522 error in previous request",
            "title": "Three D Secure Token",
            "type": "string"
          },
          "user_billing_token": {
            "description": "Unique generated user billing token from frontend and Recurly system",
            "title": "User Billing Token",
            "type": "string"
          }
        },
        "required": [
          "user_billing_token",
          "action_source",
          "subs_purchase_token",
          "bundle_name"
        ],
        "title": "SubscriptionCreateNoAuthSer",
        "type": "object"
      },
      "43c6089.SubscriptionCreateSer": {
        "example": {
          "action_source": "https://some-url/link?utm=facebook&some_other=value",
          "coupon_codes": [],
          "currency": "USD",
          "plan_code": "test",
          "user_billing_token": "X_wBoRuz-xobqtOJbOAvRg1"
        },
        "properties": {
          "action_source": {
            "description": "Full source URL where user try buy subscription",
            "format": "uri",
            "maxLength": 65536,
            "minLength": 1,
            "title": "Action Source",
            "type": "string"
          },
          "coupon_codes": {
            "default": [],
            "description": "List coupon codes",
            "items": {
              "type": "string"
            },
            "title": "Coupon Codes",
            "type": "array"
          },
          "currency": {
            "default": "USD",
            "description": "Purchase currency",
            "title": "Currency",
            "type": "string"
          },
          "plan_code": {
            "description": "Plan code from Recurly system",
            "title": "Plan Code",
            "type": "string"
          },
          "three_d_secure_token": {
            "description": "3D-secure token from frontend and Recurly system, if receive 522 error in previous request",
            "title": "Three D Secure Token",
            "type": "string"
          },
          "user_billing_token": {
            "description": "Unique generated user billing token from frontend and Recurly system",
            "title": "User Billing Token",
            "type": "string"
          }
        },
        "required": [
          "user_billing_token",
          "plan_code",
          "action_source"
        ],
        "title": "SubscriptionCreateSer",
        "type": "object"
      },
      "43c6089.UserDataRequestSer": {
        "description": "Main UserData model serializer for request processing",
        "properties": {
          "created_dt": {
            "description": "User data creation DT",
            "format": "date-time",
            "title": "Created Dt",
            "type": "string"
          },
          "data": {
            "description": "User data payload from device",
            "title": "Data",
            "type": "object"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/43c6089.UserDataRequestSer.UserDataTypes"
              }
            ],
            "description": "User data type name"
          },
          "updated_dt": {
            "description": "User data last update DT",
            "format": "date-time",
            "title": "Updated Dt",
            "type": "string"
          },
          "version": {
            "default": "0.0",
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "type",
          "data",
          "created_dt"
        ],
        "title": "UserDataRequestSer",
        "type": "object"
      },
      "43c6089.UserDataRequestSer.UserDataTypes": {
        "description": "An enumeration.",
        "enum": [
          "prog_chapter",
          "prog_scene",
          "fav_playlist",
          "fav_track",
          "fav_scene",
          "statistic",
          "settings",
          "app_state",
          "music_player",
          "onboarding"
        ],
        "title": "UserDataTypes",
        "type": "string"
      },
      "43c6089.UserRegisterNoPasswordReq": {
        "example": {
          "action_source": "https://get.loona.app/create-account?flow=short&utm_campaign=uy3u64&utm_source=fi4gr8",
          "device": {
            "data": {
              "idxs": {
                "amplitude_idx": "str",
                "appsflyer_idx": "str",
                "brt_idx": "str",
                "firebase_idx": "str",
                "idfv": "str"
              },
              "user_agent": "iPhone 11 iOS 332"
            },
            "platform": "ios"
          },
          "email": "some-email@loona.app",
          "username": "User Supername"
        },
        "properties": {
          "action_source": {
            "description": "Full source URL where user try buy subscription",
            "format": "uri",
            "maxLength": 65536,
            "minLength": 1,
            "title": "Action Source",
            "type": "string"
          },
          "device": {
            "$ref": "#/components/schemas/43c6089.UserRegisterNoPasswordReq.UserDeviceSer"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "username": {
            "title": "Username",
            "type": "string"
          }
        },
        "required": [
          "email",
          "action_source"
        ],
        "title": "UserRegisterNoPasswordReq",
        "type": "object"
      },
      "43c6089.UserRegisterNoPasswordReq.DeviceDataSer": {
        "properties": {
          "idxs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/43c6089.UserRegisterNoPasswordReq.DeviceIdxs"
              }
            ],
            "description": "Unique device indexes. For example idx from RevenueCat or Google and etc.",
            "title": "Idxs"
          },
          "user_agent": {
            "description": "Device system info, string, for example - `<device name> <OS version> <smth else>`",
            "title": "User Agent",
            "type": "string"
          }
        },
        "required": [
          "idxs",
          "user_agent"
        ],
        "title": "DeviceDataSer",
        "type": "object"
      },
      "43c6089.UserRegisterNoPasswordReq.DeviceIdxs": {
        "properties": {
          "amplitude_idx": {
            "title": "Amplitude Idx",
            "type": "string"
          },
          "appsflyer_idx": {
            "title": "Appsflyer Idx",
            "type": "string"
          },
          "brt_idx": {
            "title": "Brt Idx",
            "type": "string"
          },
          "firebase_idx": {
            "title": "Firebase Idx",
            "type": "string"
          },
          "idfv": {
            "title": "Idfv",
            "type": "string"
          }
        },
        "title": "DeviceIdxs",
        "type": "object"
      },
      "43c6089.UserRegisterNoPasswordReq.DevicesNames": {
        "description": "An enumeration.",
        "enum": [
          "ios",
          "android",
          "web",
          "other"
        ],
        "title": "DevicesNames",
        "type": "string"
      },
      "43c6089.UserRegisterNoPasswordReq.UserDeviceSer": {
        "example": {
          "data": {
            "idxs": {
              "amplitude_idx": "str",
              "appsflyer_idx": "str",
              "brt_idx": "str",
              "firebase_idx": "str",
              "idfv": "str"
            },
            "user_agent": "iPhone 11 iOS 332"
          },
          "platform": "ios"
        },
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/43c6089.UserRegisterNoPasswordReq.DeviceDataSer"
              }
            ],
            "description": "Unique device information",
            "title": "Data"
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/components/schemas/43c6089.UserRegisterNoPasswordReq.DevicesNames"
              }
            ],
            "description": "Device platform name"
          }
        },
        "required": [
          "data",
          "platform"
        ],
        "title": "UserDeviceSer",
        "type": "object"
      },
      "43c6089.UserRegisterReq": {
        "description": "Model validate REQUIRED password and confirm fields",
        "example": {
          "action_source": "https://get.loona.app/create-account?flow=short&utm_campaign=uy3u64&utm_source=fi4gr8",
          "confirm": "confirm_password",
          "device": {
            "data": {
              "idxs": {
                "amplitude_idx": "str",
                "appsflyer_idx": "str",
                "brt_idx": "str",
                "firebase_idx": "str",
                "idfv": "str"
              },
              "user_agent": "iPhone 11 iOS 332"
            },
            "platform": "ios"
          },
          "email": "some-email@loona.app",
          "password": "password",
          "username": "User Supername"
        },
        "properties": {
          "action_source": {
            "description": "Full source URL where user try buy subscription",
            "format": "uri",
            "maxLength": 65536,
            "minLength": 1,
            "title": "Action Source",
            "type": "string"
          },
          "confirm": {
            "title": "Confirm",
            "type": "string"
          },
          "device": {
            "$ref": "#/components/schemas/43c6089.UserRegisterReq.UserDeviceSer"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "username": {
            "title": "Username",
            "type": "string"
          }
        },
        "required": [
          "password",
          "confirm",
          "email"
        ],
        "title": "UserRegisterReq",
        "type": "object"
      },
      "43c6089.UserRegisterReq.DeviceDataSer": {
        "properties": {
          "idxs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/43c6089.UserRegisterReq.DeviceIdxs"
              }
            ],
            "description": "Unique device indexes. For example idx from RevenueCat or Google and etc.",
            "title": "Idxs"
          },
          "user_agent": {
            "description": "Device system info, string, for example - `<device name> <OS version> <smth else>`",
            "title": "User Agent",
            "type": "string"
          }
        },
        "required": [
          "idxs",
          "user_agent"
        ],
        "title": "DeviceDataSer",
        "type": "object"
      },
      "43c6089.UserRegisterReq.DeviceIdxs": {
        "properties": {
          "amplitude_idx": {
            "title": "Amplitude Idx",
            "type": "string"
          },
          "appsflyer_idx": {
            "title": "Appsflyer Idx",
            "type": "string"
          },
          "brt_idx": {
            "title": "Brt Idx",
            "type": "string"
          },
          "firebase_idx": {
            "title": "Firebase Idx",
            "type": "string"
          },
          "idfv": {
            "title": "Idfv",
            "type": "string"
          }
        },
        "title": "DeviceIdxs",
        "type": "object"
      },
      "43c6089.UserRegisterReq.DevicesNames": {
        "description": "An enumeration.",
        "enum": [
          "ios",
          "android",
          "web",
          "other"
        ],
        "title": "DevicesNames",
        "type": "string"
      },
      "43c6089.UserRegisterReq.UserDeviceSer": {
        "example": {
          "data": {
            "idxs": {
              "amplitude_idx": "str",
              "appsflyer_idx": "str",
              "brt_idx": "str",
              "firebase_idx": "str",
              "idfv": "str"
            },
            "user_agent": "iPhone 11 iOS 332"
          },
          "platform": "ios"
        },
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/43c6089.UserRegisterReq.DeviceDataSer"
              }
            ],
            "description": "Unique device information",
            "title": "Data"
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/components/schemas/43c6089.UserRegisterReq.DevicesNames"
              }
            ],
            "description": "Device platform name"
          }
        },
        "required": [
          "data",
          "platform"
        ],
        "title": "UserDeviceSer",
        "type": "object"
      },
      "4ac81a8.UserDataDelReqQuery": {
        "examples": {
          "ONBOARDING": {
            "type": "onboarding"
          },
          "PROG_CHAPTER_TYPE": {
            "type": "prog_chapter"
          },
          "PURCHASE": {
            "type": "purchase"
          }
        },
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataDelReqQuery.UserDataTypes"
              }
            ],
            "description": "Request query value"
          }
        },
        "title": "UserDataDelReqQuery",
        "type": "object"
      },
      "4ac81a8.UserDataDelReqQuery.UserDataTypes": {
        "description": "An enumeration.",
        "enum": [
          "prog_chapter",
          "prog_scene",
          "fav_playlist",
          "fav_track",
          "fav_scene",
          "statistic",
          "settings",
          "app_state",
          "music_player",
          "onboarding"
        ],
        "title": "UserDataTypes",
        "type": "string"
      },
      "4ac81a8.UserDataDelRes": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "examples": {
          "Data not found. 404": {
            "value": {
              "error": {
                "code": 404,
                "debug_text": "UserData not found",
                "description": "NOT_FOUND"
              },
              "response": {}
            }
          },
          "Success": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {}
            }
          }
        },
        "properties": {
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataDelRes.ResponseErrorSer"
              },
              {
                "type": "object"
              }
            ],
            "default": {
              "code": 0,
              "debug_text": "NONE",
              "description": "NONE"
            },
            "description": "Response error detail description",
            "title": "Error"
          },
          "response": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataDelRes.UserDataResData"
              }
            ],
            "default": {},
            "description": "Response is empty",
            "title": "Response"
          }
        },
        "title": "UserDataDelRes",
        "type": "object"
      },
      "4ac81a8.UserDataDelRes.DateISO8601": {
        "description": "An enumeration.",
        "enum": [
          "days",
          "week",
          "months",
          "quarter",
          "year",
          "yearly",
          "lifetime"
        ],
        "title": "DateISO8601",
        "type": "string"
      },
      "4ac81a8.UserDataDelRes.ProductTypes": {
        "description": "An enumeration.",
        "enum": [
          "consumable",
          "non_consumable",
          "auto_renewable",
          "non_renewable"
        ],
        "title": "ProductTypes",
        "type": "string"
      },
      "4ac81a8.UserDataDelRes.PurchaseSer": {
        "description": "Main Purchase model serializer",
        "example": {
          "autoRenewing": true,
          "created_dt": "2021-10-22T10:06:16",
          "event_status": "SUBSCRIPTION_RENEWED",
          "expire_dt": "2021-12-21T10:06:16",
          "is_active": true,
          "order_id": "GPA.3337-2222-3333-97266..5",
          "product_id": "year-extend-promo-2w-trial",
          "product_term": "year",
          "product_trial": "14",
          "product_type": "auto_renewable",
          "purchase_token": "jfklnddpnkjn---wO6CpirnA",
          "status": "renew",
          "store_type": "google",
          "type": "recurly",
          "updated_dt": "2021-10-24T14:06:16"
        },
        "examples": {
          "Google Purchase": {
            "value": {
              "autoRenewing": true,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "SUBSCRIPTION_RENEWED",
              "expire_dt": "2021-12-21T10:06:16",
              "is_active": true,
              "order_id": "GPA.3337-2222-3333-97266..5",
              "product_id": "year-extend-promo-2w-trial",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "jfklnddpnkjn---wO6CpirnA",
              "status": "renew",
              "store_type": "google",
              "type": "google",
              "updated_dt": "2021-10-24T14:06:16"
            }
          },
          "No Purchase": {
            "value": null
          },
          "Promotion Purchase": {
            "value": {
              "autoRenewing": false,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "PURCHASED",
              "expire_dt": "2021-11-21T10:06:16",
              "is_active": true,
              "order_id": "promotion_4c3ec87e-2d5d-43fe-a27d-ae8d828db7a5_0",
              "product_id": "app.loona.1m.Tester",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "promotion_af4d0306-2e80-4cfd-a304-43eaaba3e94e",
              "status": "other",
              "store_type": "promotion",
              "type": "promotion",
              "updated_dt": "2021-10-22T10:06:16"
            }
          },
          "Recurly Purchase": {
            "value": {
              "autoRenewing": true,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "NEW_SUBSCRIPTION_NOTIFICATION",
              "expire_dt": "2021-12-21T10:06:16",
              "is_active": true,
              "order_id": "orzehwbz11ge",
              "product_id": "year-extend-promo-2w-trial",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
              "status": "other",
              "store_type": "recurly",
              "type": "recurly",
              "updated_dt": "2021-10-24T14:06:16"
            }
          },
          "Recurly Purchase Canceled": {
            "value": {
              "autoRenewing": false,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "CANCELED_SUBSCRIPTION_NOTIFICATION",
              "expire_dt": "2021-10-26T10:06:16",
              "is_active": true,
              "order_id": "orzehwbz11ge",
              "product_id": "year-extend-promo-2w-trial",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
              "status": "canceled",
              "store_type": "recurly",
              "type": "recurly",
              "updated_dt": "2021-10-24T14:06:16"
            }
          }
        },
        "properties": {
          "autoRenewing": {
            "default": false,
            "description": "Auto Renewing Purchase status",
            "title": "Autorenewing",
            "type": "boolean"
          },
          "created_dt": {
            "description": "Subscription create datetime",
            "format": "date-time",
            "title": "Created Dt",
            "type": "string"
          },
          "event_status": {
            "description": "Subscription status based on payment system webhooks titles/names",
            "title": "Event Status",
            "type": "string"
          },
          "expire_dt": {
            "description": "Subscription expire datetime + 14 hours for time zones compensation",
            "format": "date-time",
            "title": "Expire Dt",
            "type": "string"
          },
          "is_active": {
            "description": "Basic system purchase active status",
            "title": "Is Active",
            "type": "boolean"
          },
          "order_id": {
            "description": "Order ID from payment system",
            "title": "Order Id",
            "type": "string"
          },
          "product_id": {
            "description": "Product name from payment system",
            "title": "Product Id",
            "type": "string"
          },
          "product_term": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataDelRes.DateISO8601"
              }
            ],
            "default": "week",
            "description": "Term period for subscription"
          },
          "product_trial": {
            "default": "0",
            "description": "Trial period for product plan",
            "title": "Product Trial",
            "type": "string"
          },
          "product_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataDelRes.ProductTypes"
              }
            ],
            "default": "non_consumable",
            "description": "Show, what can be done with the purchase"
          },
          "purchase_token": {
            "description": "Unique purchase token from payment system",
            "title": "Purchase Token",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataDelRes.PurchaseStatus"
              }
            ],
            "default": "other",
            "description": "System purchase status"
          },
          "store_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataDelRes.PurchaseTypes"
              }
            ],
            "default": "google",
            "description": "Purchase source type"
          },
          "type": {
            "default": "google",
            "description": "analog store type field",
            "title": "Type",
            "type": "string"
          },
          "updated_dt": {
            "description": "Subscription last change datetime",
            "format": "date-time",
            "title": "Updated Dt",
            "type": "string"
          }
        },
        "required": [
          "product_id",
          "purchase_token",
          "order_id",
          "event_status",
          "is_active",
          "created_dt",
          "updated_dt",
          "expire_dt"
        ],
        "title": "PurchaseSer",
        "type": "object"
      },
      "4ac81a8.UserDataDelRes.PurchaseStatus": {
        "description": "An enumeration.",
        "enum": [
          "other",
          "trial",
          "renew",
          "grace",
          "canceled",
          "expired",
          "test",
          "gift"
        ],
        "title": "PurchaseStatus",
        "type": "string"
      },
      "4ac81a8.UserDataDelRes.PurchaseTypes": {
        "description": "An enumeration.",
        "enum": [
          "google",
          "apple",
          "recurly",
          "custom",
          "promotion",
          "gift_card",
          "gift_code"
        ],
        "title": "PurchaseTypes",
        "type": "string"
      },
      "4ac81a8.UserDataDelRes.ResponseErrorSer": {
        "description": "Class prepare basic `Config` for other Pydantic models.\nUse for all default service models if need updated `Config`",
        "properties": {
          "code": {
            "default": 0,
            "description": "Contains error code. If `0` - all is OK",
            "title": "Code",
            "type": "integer"
          },
          "debug_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "object"
              }
            ],
            "default": "NONE",
            "description": "Contains custom debug text, if `code=500` field contains dict with `{field_name: ERROR_CODE_NAME}`",
            "title": "Debug Text"
          },
          "description": {
            "default": "NONE",
            "description": "Contains error code name",
            "title": "Description",
            "type": "string"
          }
        },
        "title": "ResponseErrorSer",
        "type": "object"
      },
      "4ac81a8.UserDataDelRes.UserDataResData": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "properties": {
          "app_state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataDelRes.UserDataSer"
              }
            ],
            "description": "UserData `app_state` type",
            "title": "App State"
          },
          "fav_playlist": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataDelRes.UserDataSer"
              }
            ],
            "description": "UserData `fav_playlist` type",
            "title": "Fav Playlist"
          },
          "fav_scene": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataDelRes.UserDataSer"
              }
            ],
            "description": "UserData `fav_scene` type",
            "title": "Fav Scene"
          },
          "fav_track": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataDelRes.UserDataSer"
              }
            ],
            "description": "UserData `fav_track` type",
            "title": "Fav Track"
          },
          "music_player": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataDelRes.UserDataSer"
              }
            ],
            "description": "UserData `music_player` type",
            "title": "Music Player"
          },
          "onboarding": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataDelRes.UserDataSer"
              }
            ],
            "description": "UserData `onboarding` type",
            "title": "Onboarding"
          },
          "prog_chapter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataDelRes.UserDataSer"
              }
            ],
            "description": "UserData `prog_chapter` type",
            "title": "Prog Chapter"
          },
          "prog_scene": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataDelRes.UserDataSer"
              }
            ],
            "description": "UserData `prog_scene` type",
            "title": "Prog Scene"
          },
          "purchase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataDelRes.PurchaseSer"
              }
            ],
            "description": "Purchase info",
            "title": "Purchase"
          },
          "settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataDelRes.UserDataSer"
              }
            ],
            "description": "UserData `settings` type",
            "title": "Settings"
          },
          "statistic": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataDelRes.UserDataSer"
              }
            ],
            "description": "UserData `statistic` type",
            "title": "Statistic"
          }
        },
        "title": "UserDataResData",
        "type": "object"
      },
      "4ac81a8.UserDataDelRes.UserDataSer": {
        "description": "Main UserData model serializer",
        "example": {
          "created_dt": "2020-06-23T16:17:05",
          "data": {
            "appLaunchCount": 5,
            "customFeedbackShownCount": 0,
            "oldAndroidUser": false,
            "oldUser": false,
            "oldUserFourChaptersFree": false,
            "oldUserPremium": true,
            "ratingWasRequested": false,
            "runDay": 5,
            "scratchModeTutorialShown": false
          },
          "type": "app_state",
          "updated_dt": "2021-12-19T20:15:12",
          "version": "0.0"
        },
        "examples": {
          "App state": {
            "value": {
              "created_dt": "2020-06-23T16:17:05",
              "data": {
                "appLaunchCount": 5,
                "customFeedbackShownCount": 0,
                "oldAndroidUser": false,
                "oldUser": false,
                "oldUserFourChaptersFree": false,
                "oldUserPremium": true,
                "ratingWasRequested": false,
                "runDay": 5,
                "scratchModeTutorialShown": false
              },
              "type": "app_state",
              "updated_dt": "2021-12-19T20:15:12",
              "version": "0.0"
            }
          },
          "Favorite track": {
            "value": {
              "created_dt": "2020-06-23T16:17:05",
              "data": {
                "journeyTime": 845,
                "streak": 1,
                "streakMax": 1
              },
              "type": "fav_track",
              "updated_dt": "2021-12-19T20:15:12",
              "version": "0.0"
            }
          },
          "Onboarding": {
            "value": {
              "created_dt": "2020-06-23T16:17:05",
              "data": {
                "initial_onboarding": {
                  "bla1": "additional data",
                  "favoriteColors": [
                    "#ffffff",
                    "#ffffff"
                  ]
                },
                "initial_onboarding2": {
                  "bla1": [
                    "#bbbbbbb",
                    "#ffffff"
                  ],
                  "favoriteColors": [
                    "#fffffff",
                    "#ffffff"
                  ]
                }
              },
              "type": "onboarding",
              "updated_dt": "2021-12-19T20:15:12",
              "version": "0.0"
            }
          }
        },
        "properties": {
          "created_dt": {
            "format": "date-time",
            "title": "Created Dt",
            "type": "string"
          },
          "data": {
            "title": "Data",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "type": "string"
          },
          "updated_dt": {
            "format": "date-time",
            "title": "Updated Dt",
            "type": "string"
          },
          "version": {
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "type",
          "data",
          "created_dt"
        ],
        "title": "UserDataSer",
        "type": "object"
      },
      "4ac81a8.UserDataGet400Res": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "examples": {
          "Error. Wrong type.": {
            "value": {
              "errors": {
                "query": {
                  "type": [
                    "Must be one of: prog_chapter, prog_scene, fav_playlist, fav_track, fav_scene, statistic, settings, app_state, music_player, onboarding, purchase."
                  ]
                }
              }
            }
          }
        },
        "properties": {
          "errors": {
            "description": "Response contains error description",
            "title": "Errors",
            "type": "object"
          }
        },
        "required": [
          "errors"
        ],
        "title": "UserDataGet400Res",
        "type": "object"
      },
      "4ac81a8.UserDataGetReqQuery": {
        "examples": {
          "ONBOARDING": {
            "type": "onboarding"
          },
          "PROG_CHAPTER_TYPE": {
            "type": "prog_chapter"
          },
          "PURCHASE": {
            "type": "purchase"
          }
        },
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataGetReqQuery.UserDataArgs"
              }
            ],
            "description": "Request query value"
          }
        },
        "title": "UserDataGetReqQuery",
        "type": "object"
      },
      "4ac81a8.UserDataGetReqQuery.UserDataArgs": {
        "description": "An enumeration.",
        "enum": [
          "prog_chapter",
          "prog_scene",
          "fav_playlist",
          "fav_track",
          "fav_scene",
          "statistic",
          "settings",
          "app_state",
          "music_player",
          "onboarding",
          "purchase"
        ],
        "title": "UserDataArgs",
        "type": "string"
      },
      "4ac81a8.UserDataGetRes": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "examples": {
          "All data": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "app_state": {
                  "created_dt": "2020-06-23T16:17:05",
                  "data": {
                    "appLaunchCount": 5,
                    "customFeedbackShownCount": 0,
                    "oldAndroidUser": false,
                    "oldUser": false,
                    "oldUserFourChaptersFree": false,
                    "oldUserPremium": true,
                    "ratingWasRequested": false,
                    "runDay": 5,
                    "scratchModeTutorialShown": false
                  },
                  "type": "app_state",
                  "updated_dt": "2021-12-19T20:15:12",
                  "version": "0.0"
                },
                "fav_track": {
                  "created_dt": "2020-06-23T16:17:05",
                  "data": {
                    "journeyTime": 845,
                    "streak": 1,
                    "streakMax": 1
                  },
                  "type": "fav_track",
                  "updated_dt": "2021-12-19T20:15:12",
                  "version": "0.0"
                },
                "onboarding": {
                  "created_dt": "2020-06-23T16:17:05",
                  "data": {
                    "initial_onboarding": {
                      "bla1": "additional data",
                      "favoriteColors": [
                        "#ffffff",
                        "#ffffff"
                      ]
                    },
                    "initial_onboarding2": {
                      "bla1": [
                        "#bbbbbbb",
                        "#ffffff"
                      ],
                      "favoriteColors": [
                        "#fffffff",
                        "#ffffff"
                      ]
                    }
                  },
                  "type": "onboarding",
                  "updated_dt": "2021-12-19T20:15:12",
                  "version": "0.0"
                },
                "purchase": {
                  "autoRenewing": true,
                  "created_dt": "2021-10-22T10:06:16",
                  "event_status": "SUBSCRIPTION_RENEWED",
                  "expire_dt": "2021-12-21T10:06:16",
                  "is_active": true,
                  "order_id": "GPA.3337-2222-3333-97266..5",
                  "product_id": "year-extend-promo-2w-trial",
                  "product_term": "year",
                  "product_trial": "14",
                  "product_type": "auto_renewable",
                  "purchase_token": "jfklnddpnkjn---wO6CpirnA",
                  "status": "renew",
                  "store_type": "google",
                  "type": "recurly",
                  "updated_dt": "2021-10-24T14:06:16"
                }
              }
            }
          },
          "All data, no Purchase": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "app_state": {
                  "created_dt": "2020-06-23T16:17:05",
                  "data": {
                    "appLaunchCount": 5,
                    "customFeedbackShownCount": 0,
                    "oldAndroidUser": false,
                    "oldUser": false,
                    "oldUserFourChaptersFree": false,
                    "oldUserPremium": true,
                    "ratingWasRequested": false,
                    "runDay": 5,
                    "scratchModeTutorialShown": false
                  },
                  "type": "app_state",
                  "updated_dt": "2021-12-19T20:15:12",
                  "version": "0.0"
                },
                "fav_track": {
                  "created_dt": "2020-06-23T16:17:05",
                  "data": {
                    "journeyTime": 845,
                    "streak": 1,
                    "streakMax": 1
                  },
                  "type": "fav_track",
                  "updated_dt": "2021-12-19T20:15:12",
                  "version": "0.0"
                },
                "onboarding": {
                  "created_dt": "2020-06-23T16:17:05",
                  "data": {
                    "initial_onboarding": {
                      "bla1": "additional data",
                      "favoriteColors": [
                        "#ffffff",
                        "#ffffff"
                      ]
                    },
                    "initial_onboarding2": {
                      "bla1": [
                        "#bbbbbbb",
                        "#ffffff"
                      ],
                      "favoriteColors": [
                        "#fffffff",
                        "#ffffff"
                      ]
                    }
                  },
                  "type": "onboarding",
                  "updated_dt": "2021-12-19T20:15:12",
                  "version": "0.0"
                },
                "purchase": {}
              }
            }
          },
          "App state": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "app_state": {
                  "created_dt": "2020-06-23T16:17:05",
                  "data": {
                    "appLaunchCount": 5,
                    "customFeedbackShownCount": 0,
                    "oldAndroidUser": false,
                    "oldUser": false,
                    "oldUserFourChaptersFree": false,
                    "oldUserPremium": true,
                    "ratingWasRequested": false,
                    "runDay": 5,
                    "scratchModeTutorialShown": false
                  },
                  "type": "app_state",
                  "updated_dt": "2021-12-19T20:15:12",
                  "version": "0.0"
                }
              }
            }
          },
          "Favorite track": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "fav_track": {
                  "created_dt": "2020-06-23T16:17:05",
                  "data": {
                    "journeyTime": 845,
                    "streak": 1,
                    "streakMax": 1
                  },
                  "type": "fav_track",
                  "updated_dt": "2021-12-19T20:15:12",
                  "version": "0.0"
                }
              }
            }
          },
          "Google Purchase": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "purchase": {
                  "autoRenewing": true,
                  "created_dt": "2021-10-22T10:06:16",
                  "event_status": "SUBSCRIPTION_RENEWED",
                  "expire_dt": "2021-12-21T10:06:16",
                  "is_active": true,
                  "order_id": "GPA.3337-2222-3333-97266..5",
                  "product_id": "year-extend-promo-2w-trial",
                  "product_term": "year",
                  "product_trial": "14",
                  "product_type": "auto_renewable",
                  "purchase_token": "jfklnddpnkjn---wO6CpirnA",
                  "status": "renew",
                  "store_type": "google",
                  "type": "google",
                  "updated_dt": "2021-10-24T14:06:16"
                }
              }
            }
          },
          "No Purchase": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "purchase": null
              }
            }
          },
          "Onboarding": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "onboarding": {
                  "created_dt": "2020-06-23T16:17:05",
                  "data": {
                    "initial_onboarding": {
                      "bla1": "additional data",
                      "favoriteColors": [
                        "#ffffff",
                        "#ffffff"
                      ]
                    },
                    "initial_onboarding2": {
                      "bla1": [
                        "#bbbbbbb",
                        "#ffffff"
                      ],
                      "favoriteColors": [
                        "#fffffff",
                        "#ffffff"
                      ]
                    }
                  },
                  "type": "onboarding",
                  "updated_dt": "2021-12-19T20:15:12",
                  "version": "0.0"
                }
              }
            }
          },
          "Promotion Purchase": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "purchase": {
                  "autoRenewing": false,
                  "created_dt": "2021-10-22T10:06:16",
                  "event_status": "PURCHASED",
                  "expire_dt": "2021-11-21T10:06:16",
                  "is_active": true,
                  "order_id": "promotion_4c3ec87e-2d5d-43fe-a27d-ae8d828db7a5_0",
                  "product_id": "app.loona.1m.Tester",
                  "product_term": "year",
                  "product_trial": "14",
                  "product_type": "auto_renewable",
                  "purchase_token": "promotion_af4d0306-2e80-4cfd-a304-43eaaba3e94e",
                  "status": "other",
                  "store_type": "promotion",
                  "type": "promotion",
                  "updated_dt": "2021-10-22T10:06:16"
                }
              }
            }
          },
          "Recurly Purchase": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "purchase": {
                  "autoRenewing": true,
                  "created_dt": "2021-10-22T10:06:16",
                  "event_status": "NEW_SUBSCRIPTION_NOTIFICATION",
                  "expire_dt": "2021-12-21T10:06:16",
                  "is_active": true,
                  "order_id": "orzehwbz11ge",
                  "product_id": "year-extend-promo-2w-trial",
                  "product_term": "year",
                  "product_trial": "14",
                  "product_type": "auto_renewable",
                  "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
                  "status": "other",
                  "store_type": "recurly",
                  "type": "recurly",
                  "updated_dt": "2021-10-24T14:06:16"
                }
              }
            }
          },
          "Recurly Purchase Canceled": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "purchase": {
                  "autoRenewing": false,
                  "created_dt": "2021-10-22T10:06:16",
                  "event_status": "CANCELED_SUBSCRIPTION_NOTIFICATION",
                  "expire_dt": "2021-10-26T10:06:16",
                  "is_active": true,
                  "order_id": "orzehwbz11ge",
                  "product_id": "year-extend-promo-2w-trial",
                  "product_term": "year",
                  "product_trial": "14",
                  "product_type": "auto_renewable",
                  "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
                  "status": "canceled",
                  "store_type": "recurly",
                  "type": "recurly",
                  "updated_dt": "2021-10-24T14:06:16"
                }
              }
            }
          }
        },
        "properties": {
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataGetRes.ResponseErrorSer"
              },
              {
                "type": "object"
              }
            ],
            "default": {
              "code": 0,
              "debug_text": "NONE",
              "description": "NONE"
            },
            "description": "Response error detail description",
            "title": "Error"
          },
          "response": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataGetRes.UserDataResData"
              }
            ],
            "default": {},
            "description": "Response contains UserData and/or Purchase info",
            "title": "Response"
          }
        },
        "title": "UserDataGetRes",
        "type": "object"
      },
      "4ac81a8.UserDataGetRes.DateISO8601": {
        "description": "An enumeration.",
        "enum": [
          "days",
          "week",
          "months",
          "quarter",
          "year",
          "yearly",
          "lifetime"
        ],
        "title": "DateISO8601",
        "type": "string"
      },
      "4ac81a8.UserDataGetRes.ProductTypes": {
        "description": "An enumeration.",
        "enum": [
          "consumable",
          "non_consumable",
          "auto_renewable",
          "non_renewable"
        ],
        "title": "ProductTypes",
        "type": "string"
      },
      "4ac81a8.UserDataGetRes.PurchaseSer": {
        "description": "Main Purchase model serializer",
        "example": {
          "autoRenewing": true,
          "created_dt": "2021-10-22T10:06:16",
          "event_status": "SUBSCRIPTION_RENEWED",
          "expire_dt": "2021-12-21T10:06:16",
          "is_active": true,
          "order_id": "GPA.3337-2222-3333-97266..5",
          "product_id": "year-extend-promo-2w-trial",
          "product_term": "year",
          "product_trial": "14",
          "product_type": "auto_renewable",
          "purchase_token": "jfklnddpnkjn---wO6CpirnA",
          "status": "renew",
          "store_type": "google",
          "type": "recurly",
          "updated_dt": "2021-10-24T14:06:16"
        },
        "examples": {
          "Google Purchase": {
            "value": {
              "autoRenewing": true,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "SUBSCRIPTION_RENEWED",
              "expire_dt": "2021-12-21T10:06:16",
              "is_active": true,
              "order_id": "GPA.3337-2222-3333-97266..5",
              "product_id": "year-extend-promo-2w-trial",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "jfklnddpnkjn---wO6CpirnA",
              "status": "renew",
              "store_type": "google",
              "type": "google",
              "updated_dt": "2021-10-24T14:06:16"
            }
          },
          "No Purchase": {
            "value": null
          },
          "Promotion Purchase": {
            "value": {
              "autoRenewing": false,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "PURCHASED",
              "expire_dt": "2021-11-21T10:06:16",
              "is_active": true,
              "order_id": "promotion_4c3ec87e-2d5d-43fe-a27d-ae8d828db7a5_0",
              "product_id": "app.loona.1m.Tester",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "promotion_af4d0306-2e80-4cfd-a304-43eaaba3e94e",
              "status": "other",
              "store_type": "promotion",
              "type": "promotion",
              "updated_dt": "2021-10-22T10:06:16"
            }
          },
          "Recurly Purchase": {
            "value": {
              "autoRenewing": true,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "NEW_SUBSCRIPTION_NOTIFICATION",
              "expire_dt": "2021-12-21T10:06:16",
              "is_active": true,
              "order_id": "orzehwbz11ge",
              "product_id": "year-extend-promo-2w-trial",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
              "status": "other",
              "store_type": "recurly",
              "type": "recurly",
              "updated_dt": "2021-10-24T14:06:16"
            }
          },
          "Recurly Purchase Canceled": {
            "value": {
              "autoRenewing": false,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "CANCELED_SUBSCRIPTION_NOTIFICATION",
              "expire_dt": "2021-10-26T10:06:16",
              "is_active": true,
              "order_id": "orzehwbz11ge",
              "product_id": "year-extend-promo-2w-trial",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
              "status": "canceled",
              "store_type": "recurly",
              "type": "recurly",
              "updated_dt": "2021-10-24T14:06:16"
            }
          }
        },
        "properties": {
          "autoRenewing": {
            "default": false,
            "description": "Auto Renewing Purchase status",
            "title": "Autorenewing",
            "type": "boolean"
          },
          "created_dt": {
            "description": "Subscription create datetime",
            "format": "date-time",
            "title": "Created Dt",
            "type": "string"
          },
          "event_status": {
            "description": "Subscription status based on payment system webhooks titles/names",
            "title": "Event Status",
            "type": "string"
          },
          "expire_dt": {
            "description": "Subscription expire datetime + 14 hours for time zones compensation",
            "format": "date-time",
            "title": "Expire Dt",
            "type": "string"
          },
          "is_active": {
            "description": "Basic system purchase active status",
            "title": "Is Active",
            "type": "boolean"
          },
          "order_id": {
            "description": "Order ID from payment system",
            "title": "Order Id",
            "type": "string"
          },
          "product_id": {
            "description": "Product name from payment system",
            "title": "Product Id",
            "type": "string"
          },
          "product_term": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataGetRes.DateISO8601"
              }
            ],
            "default": "week",
            "description": "Term period for subscription"
          },
          "product_trial": {
            "default": "0",
            "description": "Trial period for product plan",
            "title": "Product Trial",
            "type": "string"
          },
          "product_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataGetRes.ProductTypes"
              }
            ],
            "default": "non_consumable",
            "description": "Show, what can be done with the purchase"
          },
          "purchase_token": {
            "description": "Unique purchase token from payment system",
            "title": "Purchase Token",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataGetRes.PurchaseStatus"
              }
            ],
            "default": "other",
            "description": "System purchase status"
          },
          "store_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataGetRes.PurchaseTypes"
              }
            ],
            "default": "google",
            "description": "Purchase source type"
          },
          "type": {
            "default": "google",
            "description": "analog store type field",
            "title": "Type",
            "type": "string"
          },
          "updated_dt": {
            "description": "Subscription last change datetime",
            "format": "date-time",
            "title": "Updated Dt",
            "type": "string"
          }
        },
        "required": [
          "product_id",
          "purchase_token",
          "order_id",
          "event_status",
          "is_active",
          "created_dt",
          "updated_dt",
          "expire_dt"
        ],
        "title": "PurchaseSer",
        "type": "object"
      },
      "4ac81a8.UserDataGetRes.PurchaseStatus": {
        "description": "An enumeration.",
        "enum": [
          "other",
          "trial",
          "renew",
          "grace",
          "canceled",
          "expired",
          "test",
          "gift"
        ],
        "title": "PurchaseStatus",
        "type": "string"
      },
      "4ac81a8.UserDataGetRes.PurchaseTypes": {
        "description": "An enumeration.",
        "enum": [
          "google",
          "apple",
          "recurly",
          "custom",
          "promotion",
          "gift_card",
          "gift_code"
        ],
        "title": "PurchaseTypes",
        "type": "string"
      },
      "4ac81a8.UserDataGetRes.ResponseErrorSer": {
        "description": "Class prepare basic `Config` for other Pydantic models.\nUse for all default service models if need updated `Config`",
        "properties": {
          "code": {
            "default": 0,
            "description": "Contains error code. If `0` - all is OK",
            "title": "Code",
            "type": "integer"
          },
          "debug_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "object"
              }
            ],
            "default": "NONE",
            "description": "Contains custom debug text, if `code=500` field contains dict with `{field_name: ERROR_CODE_NAME}`",
            "title": "Debug Text"
          },
          "description": {
            "default": "NONE",
            "description": "Contains error code name",
            "title": "Description",
            "type": "string"
          }
        },
        "title": "ResponseErrorSer",
        "type": "object"
      },
      "4ac81a8.UserDataGetRes.UserDataResData": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "properties": {
          "app_state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataGetRes.UserDataSer"
              }
            ],
            "description": "UserData `app_state` type",
            "title": "App State"
          },
          "fav_playlist": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataGetRes.UserDataSer"
              }
            ],
            "description": "UserData `fav_playlist` type",
            "title": "Fav Playlist"
          },
          "fav_scene": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataGetRes.UserDataSer"
              }
            ],
            "description": "UserData `fav_scene` type",
            "title": "Fav Scene"
          },
          "fav_track": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataGetRes.UserDataSer"
              }
            ],
            "description": "UserData `fav_track` type",
            "title": "Fav Track"
          },
          "music_player": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataGetRes.UserDataSer"
              }
            ],
            "description": "UserData `music_player` type",
            "title": "Music Player"
          },
          "onboarding": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataGetRes.UserDataSer"
              }
            ],
            "description": "UserData `onboarding` type",
            "title": "Onboarding"
          },
          "prog_chapter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataGetRes.UserDataSer"
              }
            ],
            "description": "UserData `prog_chapter` type",
            "title": "Prog Chapter"
          },
          "prog_scene": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataGetRes.UserDataSer"
              }
            ],
            "description": "UserData `prog_scene` type",
            "title": "Prog Scene"
          },
          "purchase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataGetRes.PurchaseSer"
              }
            ],
            "description": "Purchase info",
            "title": "Purchase"
          },
          "settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataGetRes.UserDataSer"
              }
            ],
            "description": "UserData `settings` type",
            "title": "Settings"
          },
          "statistic": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataGetRes.UserDataSer"
              }
            ],
            "description": "UserData `statistic` type",
            "title": "Statistic"
          }
        },
        "title": "UserDataResData",
        "type": "object"
      },
      "4ac81a8.UserDataGetRes.UserDataSer": {
        "description": "Main UserData model serializer",
        "example": {
          "created_dt": "2020-06-23T16:17:05",
          "data": {
            "appLaunchCount": 5,
            "customFeedbackShownCount": 0,
            "oldAndroidUser": false,
            "oldUser": false,
            "oldUserFourChaptersFree": false,
            "oldUserPremium": true,
            "ratingWasRequested": false,
            "runDay": 5,
            "scratchModeTutorialShown": false
          },
          "type": "app_state",
          "updated_dt": "2021-12-19T20:15:12",
          "version": "0.0"
        },
        "examples": {
          "App state": {
            "value": {
              "created_dt": "2020-06-23T16:17:05",
              "data": {
                "appLaunchCount": 5,
                "customFeedbackShownCount": 0,
                "oldAndroidUser": false,
                "oldUser": false,
                "oldUserFourChaptersFree": false,
                "oldUserPremium": true,
                "ratingWasRequested": false,
                "runDay": 5,
                "scratchModeTutorialShown": false
              },
              "type": "app_state",
              "updated_dt": "2021-12-19T20:15:12",
              "version": "0.0"
            }
          },
          "Favorite track": {
            "value": {
              "created_dt": "2020-06-23T16:17:05",
              "data": {
                "journeyTime": 845,
                "streak": 1,
                "streakMax": 1
              },
              "type": "fav_track",
              "updated_dt": "2021-12-19T20:15:12",
              "version": "0.0"
            }
          },
          "Onboarding": {
            "value": {
              "created_dt": "2020-06-23T16:17:05",
              "data": {
                "initial_onboarding": {
                  "bla1": "additional data",
                  "favoriteColors": [
                    "#ffffff",
                    "#ffffff"
                  ]
                },
                "initial_onboarding2": {
                  "bla1": [
                    "#bbbbbbb",
                    "#ffffff"
                  ],
                  "favoriteColors": [
                    "#fffffff",
                    "#ffffff"
                  ]
                }
              },
              "type": "onboarding",
              "updated_dt": "2021-12-19T20:15:12",
              "version": "0.0"
            }
          }
        },
        "properties": {
          "created_dt": {
            "format": "date-time",
            "title": "Created Dt",
            "type": "string"
          },
          "data": {
            "title": "Data",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "type": "string"
          },
          "updated_dt": {
            "format": "date-time",
            "title": "Updated Dt",
            "type": "string"
          },
          "version": {
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "type",
          "data",
          "created_dt"
        ],
        "title": "UserDataSer",
        "type": "object"
      },
      "4ac81a8.UserDataPostRes": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "examples": {
          "Data exist. 409": {
            "value": {
              "error": {
                "code": 409,
                "debug_text": "Newest data exist",
                "description": "DATA_EXIST"
              },
              "response": {
                "created_dt": "2021-10-22T05:06:16.527409",
                "data": {
                  "journeyTime": 845,
                  "streak": 1,
                  "streakMax": 1
                },
                "device": {},
                "type": "prog_scene",
                "updated_dt": "2021-10-22T10:06:16.527418",
                "version": "0.0"
              }
            }
          },
          "Success": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {}
            }
          },
          "Validation error. 500": {
            "value": {
              "error": {
                "code": 500,
                "debug_text": {
                  "created_dt": "invalid datetime format"
                },
                "description": "FIELDS_VALIDATION_ERROR"
              },
              "response": {}
            }
          }
        },
        "properties": {
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataPostRes.ResponseErrorSer"
              },
              {
                "type": "object"
              }
            ],
            "default": {
              "code": 0,
              "debug_text": "NONE",
              "description": "NONE"
            },
            "description": "Response error detail description",
            "title": "Error"
          },
          "response": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataPostRes.UserDataResData"
              }
            ],
            "default": {},
            "description": "Response is empty or contains more fresh UserData",
            "title": "Response"
          }
        },
        "title": "UserDataPostRes",
        "type": "object"
      },
      "4ac81a8.UserDataPostRes.DateISO8601": {
        "description": "An enumeration.",
        "enum": [
          "days",
          "week",
          "months",
          "quarter",
          "year",
          "yearly",
          "lifetime"
        ],
        "title": "DateISO8601",
        "type": "string"
      },
      "4ac81a8.UserDataPostRes.ProductTypes": {
        "description": "An enumeration.",
        "enum": [
          "consumable",
          "non_consumable",
          "auto_renewable",
          "non_renewable"
        ],
        "title": "ProductTypes",
        "type": "string"
      },
      "4ac81a8.UserDataPostRes.PurchaseSer": {
        "description": "Main Purchase model serializer",
        "example": {
          "autoRenewing": true,
          "created_dt": "2021-10-22T10:06:16",
          "event_status": "SUBSCRIPTION_RENEWED",
          "expire_dt": "2021-12-21T10:06:16",
          "is_active": true,
          "order_id": "GPA.3337-2222-3333-97266..5",
          "product_id": "year-extend-promo-2w-trial",
          "product_term": "year",
          "product_trial": "14",
          "product_type": "auto_renewable",
          "purchase_token": "jfklnddpnkjn---wO6CpirnA",
          "status": "renew",
          "store_type": "google",
          "type": "recurly",
          "updated_dt": "2021-10-24T14:06:16"
        },
        "examples": {
          "Google Purchase": {
            "value": {
              "autoRenewing": true,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "SUBSCRIPTION_RENEWED",
              "expire_dt": "2021-12-21T10:06:16",
              "is_active": true,
              "order_id": "GPA.3337-2222-3333-97266..5",
              "product_id": "year-extend-promo-2w-trial",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "jfklnddpnkjn---wO6CpirnA",
              "status": "renew",
              "store_type": "google",
              "type": "google",
              "updated_dt": "2021-10-24T14:06:16"
            }
          },
          "No Purchase": {
            "value": null
          },
          "Promotion Purchase": {
            "value": {
              "autoRenewing": false,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "PURCHASED",
              "expire_dt": "2021-11-21T10:06:16",
              "is_active": true,
              "order_id": "promotion_4c3ec87e-2d5d-43fe-a27d-ae8d828db7a5_0",
              "product_id": "app.loona.1m.Tester",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "promotion_af4d0306-2e80-4cfd-a304-43eaaba3e94e",
              "status": "other",
              "store_type": "promotion",
              "type": "promotion",
              "updated_dt": "2021-10-22T10:06:16"
            }
          },
          "Recurly Purchase": {
            "value": {
              "autoRenewing": true,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "NEW_SUBSCRIPTION_NOTIFICATION",
              "expire_dt": "2021-12-21T10:06:16",
              "is_active": true,
              "order_id": "orzehwbz11ge",
              "product_id": "year-extend-promo-2w-trial",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
              "status": "other",
              "store_type": "recurly",
              "type": "recurly",
              "updated_dt": "2021-10-24T14:06:16"
            }
          },
          "Recurly Purchase Canceled": {
            "value": {
              "autoRenewing": false,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "CANCELED_SUBSCRIPTION_NOTIFICATION",
              "expire_dt": "2021-10-26T10:06:16",
              "is_active": true,
              "order_id": "orzehwbz11ge",
              "product_id": "year-extend-promo-2w-trial",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
              "status": "canceled",
              "store_type": "recurly",
              "type": "recurly",
              "updated_dt": "2021-10-24T14:06:16"
            }
          }
        },
        "properties": {
          "autoRenewing": {
            "default": false,
            "description": "Auto Renewing Purchase status",
            "title": "Autorenewing",
            "type": "boolean"
          },
          "created_dt": {
            "description": "Subscription create datetime",
            "format": "date-time",
            "title": "Created Dt",
            "type": "string"
          },
          "event_status": {
            "description": "Subscription status based on payment system webhooks titles/names",
            "title": "Event Status",
            "type": "string"
          },
          "expire_dt": {
            "description": "Subscription expire datetime + 14 hours for time zones compensation",
            "format": "date-time",
            "title": "Expire Dt",
            "type": "string"
          },
          "is_active": {
            "description": "Basic system purchase active status",
            "title": "Is Active",
            "type": "boolean"
          },
          "order_id": {
            "description": "Order ID from payment system",
            "title": "Order Id",
            "type": "string"
          },
          "product_id": {
            "description": "Product name from payment system",
            "title": "Product Id",
            "type": "string"
          },
          "product_term": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataPostRes.DateISO8601"
              }
            ],
            "default": "week",
            "description": "Term period for subscription"
          },
          "product_trial": {
            "default": "0",
            "description": "Trial period for product plan",
            "title": "Product Trial",
            "type": "string"
          },
          "product_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataPostRes.ProductTypes"
              }
            ],
            "default": "non_consumable",
            "description": "Show, what can be done with the purchase"
          },
          "purchase_token": {
            "description": "Unique purchase token from payment system",
            "title": "Purchase Token",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataPostRes.PurchaseStatus"
              }
            ],
            "default": "other",
            "description": "System purchase status"
          },
          "store_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataPostRes.PurchaseTypes"
              }
            ],
            "default": "google",
            "description": "Purchase source type"
          },
          "type": {
            "default": "google",
            "description": "analog store type field",
            "title": "Type",
            "type": "string"
          },
          "updated_dt": {
            "description": "Subscription last change datetime",
            "format": "date-time",
            "title": "Updated Dt",
            "type": "string"
          }
        },
        "required": [
          "product_id",
          "purchase_token",
          "order_id",
          "event_status",
          "is_active",
          "created_dt",
          "updated_dt",
          "expire_dt"
        ],
        "title": "PurchaseSer",
        "type": "object"
      },
      "4ac81a8.UserDataPostRes.PurchaseStatus": {
        "description": "An enumeration.",
        "enum": [
          "other",
          "trial",
          "renew",
          "grace",
          "canceled",
          "expired",
          "test",
          "gift"
        ],
        "title": "PurchaseStatus",
        "type": "string"
      },
      "4ac81a8.UserDataPostRes.PurchaseTypes": {
        "description": "An enumeration.",
        "enum": [
          "google",
          "apple",
          "recurly",
          "custom",
          "promotion",
          "gift_card",
          "gift_code"
        ],
        "title": "PurchaseTypes",
        "type": "string"
      },
      "4ac81a8.UserDataPostRes.ResponseErrorSer": {
        "description": "Class prepare basic `Config` for other Pydantic models.\nUse for all default service models if need updated `Config`",
        "properties": {
          "code": {
            "default": 0,
            "description": "Contains error code. If `0` - all is OK",
            "title": "Code",
            "type": "integer"
          },
          "debug_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "object"
              }
            ],
            "default": "NONE",
            "description": "Contains custom debug text, if `code=500` field contains dict with `{field_name: ERROR_CODE_NAME}`",
            "title": "Debug Text"
          },
          "description": {
            "default": "NONE",
            "description": "Contains error code name",
            "title": "Description",
            "type": "string"
          }
        },
        "title": "ResponseErrorSer",
        "type": "object"
      },
      "4ac81a8.UserDataPostRes.UserDataResData": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "properties": {
          "app_state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataPostRes.UserDataSer"
              }
            ],
            "description": "UserData `app_state` type",
            "title": "App State"
          },
          "fav_playlist": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataPostRes.UserDataSer"
              }
            ],
            "description": "UserData `fav_playlist` type",
            "title": "Fav Playlist"
          },
          "fav_scene": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataPostRes.UserDataSer"
              }
            ],
            "description": "UserData `fav_scene` type",
            "title": "Fav Scene"
          },
          "fav_track": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataPostRes.UserDataSer"
              }
            ],
            "description": "UserData `fav_track` type",
            "title": "Fav Track"
          },
          "music_player": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataPostRes.UserDataSer"
              }
            ],
            "description": "UserData `music_player` type",
            "title": "Music Player"
          },
          "onboarding": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataPostRes.UserDataSer"
              }
            ],
            "description": "UserData `onboarding` type",
            "title": "Onboarding"
          },
          "prog_chapter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataPostRes.UserDataSer"
              }
            ],
            "description": "UserData `prog_chapter` type",
            "title": "Prog Chapter"
          },
          "prog_scene": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataPostRes.UserDataSer"
              }
            ],
            "description": "UserData `prog_scene` type",
            "title": "Prog Scene"
          },
          "purchase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataPostRes.PurchaseSer"
              }
            ],
            "description": "Purchase info",
            "title": "Purchase"
          },
          "settings": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataPostRes.UserDataSer"
              }
            ],
            "description": "UserData `settings` type",
            "title": "Settings"
          },
          "statistic": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserDataPostRes.UserDataSer"
              }
            ],
            "description": "UserData `statistic` type",
            "title": "Statistic"
          }
        },
        "title": "UserDataResData",
        "type": "object"
      },
      "4ac81a8.UserDataPostRes.UserDataSer": {
        "description": "Main UserData model serializer",
        "example": {
          "created_dt": "2020-06-23T16:17:05",
          "data": {
            "appLaunchCount": 5,
            "customFeedbackShownCount": 0,
            "oldAndroidUser": false,
            "oldUser": false,
            "oldUserFourChaptersFree": false,
            "oldUserPremium": true,
            "ratingWasRequested": false,
            "runDay": 5,
            "scratchModeTutorialShown": false
          },
          "type": "app_state",
          "updated_dt": "2021-12-19T20:15:12",
          "version": "0.0"
        },
        "examples": {
          "App state": {
            "value": {
              "created_dt": "2020-06-23T16:17:05",
              "data": {
                "appLaunchCount": 5,
                "customFeedbackShownCount": 0,
                "oldAndroidUser": false,
                "oldUser": false,
                "oldUserFourChaptersFree": false,
                "oldUserPremium": true,
                "ratingWasRequested": false,
                "runDay": 5,
                "scratchModeTutorialShown": false
              },
              "type": "app_state",
              "updated_dt": "2021-12-19T20:15:12",
              "version": "0.0"
            }
          },
          "Favorite track": {
            "value": {
              "created_dt": "2020-06-23T16:17:05",
              "data": {
                "journeyTime": 845,
                "streak": 1,
                "streakMax": 1
              },
              "type": "fav_track",
              "updated_dt": "2021-12-19T20:15:12",
              "version": "0.0"
            }
          },
          "Onboarding": {
            "value": {
              "created_dt": "2020-06-23T16:17:05",
              "data": {
                "initial_onboarding": {
                  "bla1": "additional data",
                  "favoriteColors": [
                    "#ffffff",
                    "#ffffff"
                  ]
                },
                "initial_onboarding2": {
                  "bla1": [
                    "#bbbbbbb",
                    "#ffffff"
                  ],
                  "favoriteColors": [
                    "#fffffff",
                    "#ffffff"
                  ]
                }
              },
              "type": "onboarding",
              "updated_dt": "2021-12-19T20:15:12",
              "version": "0.0"
            }
          }
        },
        "properties": {
          "created_dt": {
            "format": "date-time",
            "title": "Created Dt",
            "type": "string"
          },
          "data": {
            "title": "Data",
            "type": "object"
          },
          "type": {
            "title": "Type",
            "type": "string"
          },
          "updated_dt": {
            "format": "date-time",
            "title": "Updated Dt",
            "type": "string"
          },
          "version": {
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "type",
          "data",
          "created_dt"
        ],
        "title": "UserDataSer",
        "type": "object"
      },
      "4ac81a8.UserInfoGetRes": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "examples": {
          "Success Full": {
            "value": {
              "error": {
                "code": "0",
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "oauths": [
                  {
                    "created_at": "2021-10-22T10:06:16",
                    "email": "user.mail@gmail.com",
                    "provider": "apple",
                    "provider_user_id": "000074.9680b3111e1148658421beb86b532d70.0638"
                  },
                  {
                    "created_at": "2021-10-22T10:06:16",
                    "email": "user.mail@gmail.com",
                    "provider": "facebook",
                    "provider_user_id": "2854200118148984"
                  },
                  {
                    "created_at": "2021-10-22T10:06:16",
                    "email": "user.mail@gmail.com",
                    "provider": "google",
                    "provider_user_id": "114268033339011136503"
                  }
                ],
                "user": {
                  "email": "user.mail@gmail.com",
                  "idx": "user_e1a34d21-25f2-4fb0-9e20-a1646da29326",
                  "is_active": true,
                  "last_active_dt": "2021-10-22T10:06:16",
                  "register_dt": "2021-10-17T07:06:16",
                  "username": "User Name"
                }
              }
            }
          },
          "Success NO OAuth": {
            "value": {
              "error": {
                "code": "0",
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "oauths": [],
                "user": {
                  "email": "user.mail@gmail.com",
                  "idx": "user_e1a34d21-25f2-4fb0-9e20-a1646da29326",
                  "is_active": true,
                  "last_active_dt": "2021-10-22T10:06:16",
                  "register_dt": "2021-10-17T07:06:16",
                  "username": "User Name"
                }
              }
            }
          }
        },
        "properties": {
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserInfoGetRes.ResponseErrorSer"
              },
              {
                "type": "object"
              }
            ],
            "default": {
              "code": 0,
              "debug_text": "NONE",
              "description": "NONE"
            },
            "description": "Response error detail description",
            "title": "Error"
          },
          "response": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserInfoGetRes.UserInfoResData"
              }
            ],
            "description": "Response contains User info, User OAuth types",
            "title": "Response"
          }
        },
        "required": [
          "response"
        ],
        "title": "UserInfoGetRes",
        "type": "object"
      },
      "4ac81a8.UserInfoGetRes.OAuthProviders": {
        "description": "An enumeration.",
        "enum": [
          "google",
          "facebook",
          "apple"
        ],
        "title": "OAuthProviders",
        "type": "string"
      },
      "4ac81a8.UserInfoGetRes.OAuthSer": {
        "description": "Main OAuth model serializer",
        "example": {
          "created_at": "2021-10-22T10:06:16",
          "email": "user.mail@gmail.com",
          "provider": "apple",
          "provider_user_id": "000074.9680b3111e1148658421beb86b532d70.0638"
        },
        "example_list": [
          {
            "created_at": "2021-10-22T10:06:16",
            "email": "user.mail@gmail.com",
            "provider": "apple",
            "provider_user_id": "000074.9680b3111e1148658421beb86b532d70.0638"
          },
          {
            "created_at": "2021-10-22T10:06:16",
            "email": "user.mail@gmail.com",
            "provider": "facebook",
            "provider_user_id": "2854200118148984"
          },
          {
            "created_at": "2021-10-22T10:06:16",
            "email": "user.mail@gmail.com",
            "provider": "google",
            "provider_user_id": "114268033339011136503"
          }
        ],
        "examples": {
          "Apple provider": {
            "value": {
              "created_at": "2021-10-22T10:06:16",
              "email": "user.mail@gmail.com",
              "provider": "apple",
              "provider_user_id": "000074.9680b3111e1148658421beb86b532d70.0638"
            }
          },
          "Facebook provider": {
            "value": {
              "created_at": "2021-10-22T10:06:16",
              "email": "user.mail@gmail.com",
              "provider": "facebook",
              "provider_user_id": "2854200118148984"
            }
          },
          "Google provider": {
            "value": {
              "created_at": "2021-10-22T10:06:16",
              "email": "user.mail@gmail.com",
              "provider": "google",
              "provider_user_id": "114268033339011136503"
            }
          }
        },
        "properties": {
          "created_at": {
            "description": "OAuth register datetime",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "email": {
            "description": "Unique OAuth email, if it is exist",
            "title": "Email",
            "type": "string"
          },
          "provider": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserInfoGetRes.OAuthProviders"
              }
            ],
            "description": "OAuth provider name"
          },
          "provider_user_id": {
            "description": "Unique provider OAuth ID, for each provider this ID is different",
            "title": "Provider User Id",
            "type": "string"
          }
        },
        "required": [
          "provider_user_id",
          "provider",
          "created_at"
        ],
        "title": "OAuthSer",
        "type": "object"
      },
      "4ac81a8.UserInfoGetRes.ResponseErrorSer": {
        "description": "Class prepare basic `Config` for other Pydantic models.\nUse for all default service models if need updated `Config`",
        "properties": {
          "code": {
            "default": 0,
            "description": "Contains error code. If `0` - all is OK",
            "title": "Code",
            "type": "integer"
          },
          "debug_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "object"
              }
            ],
            "default": "NONE",
            "description": "Contains custom debug text, if `code=500` field contains dict with `{field_name: ERROR_CODE_NAME}`",
            "title": "Debug Text"
          },
          "description": {
            "default": "NONE",
            "description": "Contains error code name",
            "title": "Description",
            "type": "string"
          }
        },
        "title": "ResponseErrorSer",
        "type": "object"
      },
      "4ac81a8.UserInfoGetRes.UserInfoResData": {
        "properties": {
          "oauths": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/4ac81a8.UserInfoGetRes.OAuthSer"
                },
                "type": "array"
              },
              {
                "items": {},
                "type": "array"
              }
            ],
            "description": "List of User OAuth's, or empty list if nothing exist",
            "title": "Oauths"
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserInfoGetRes.UserSer"
              }
            ],
            "description": "User info",
            "title": "User"
          }
        },
        "required": [
          "user",
          "oauths"
        ],
        "title": "UserInfoResData",
        "type": "object"
      },
      "4ac81a8.UserInfoGetRes.UserSer": {
        "description": "Main User model serializer",
        "example": {
          "email": "user.mail@gmail.com",
          "idx": "user_e1a34d21-25f2-4fb0-9e20-a1646da29326",
          "is_active": true,
          "last_active_dt": "2021-10-22T10:06:16",
          "register_dt": "2021-10-17T07:06:16",
          "username": "User Name"
        },
        "examples": {
          "Apple provider": {
            "value": {
              "created_at": "2021-10-22T10:06:16",
              "email": "user.mail@gmail.com",
              "provider": "apple",
              "provider_user_id": "000074.9680b3111e1148658421beb86b532d70.0638"
            }
          },
          "Facebook provider": {
            "value": {
              "created_at": "2021-10-22T10:06:16",
              "email": "user.mail@gmail.com",
              "provider": "facebook",
              "provider_user_id": "2854200118148984"
            }
          },
          "Google provider": {
            "value": {
              "created_at": "2021-10-22T10:06:16",
              "email": "user.mail@gmail.com",
              "provider": "google",
              "provider_user_id": "114268033339011136503"
            }
          }
        },
        "properties": {
          "email": {
            "description": "Unique User email, if it is exist",
            "title": "Email",
            "type": "string"
          },
          "idx": {
            "description": "Unique system User IDX, looks like `prefix + UUID4`",
            "title": "Idx",
            "type": "string"
          },
          "is_active": {
            "description": "User active status",
            "title": "Is Active",
            "type": "boolean"
          },
          "last_active_dt": {
            "description": "User datetime of the last interaction with the server",
            "format": "date-time",
            "title": "Last Active Dt",
            "type": "string"
          },
          "register_dt": {
            "description": "User register datetime",
            "format": "date-time",
            "title": "Register Dt",
            "type": "string"
          },
          "username": {
            "description": "User name",
            "title": "Username",
            "type": "string"
          }
        },
        "required": [
          "idx",
          "username",
          "is_active",
          "register_dt",
          "last_active_dt"
        ],
        "title": "UserSer",
        "type": "object"
      },
      "4ac81a8.UserInfoPostRes": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "examples": {
          "EMAIL_USED": {
            "value": {
              "error": {
                "code": 409,
                "debug_text": {
                  "email": "EMAIL_USED"
                },
                "description": "DATA_EXIST"
              },
              "response": {}
            }
          },
          "PASSWORD_MISMATCH": {
            "value": {
              "error": {
                "code": "500",
                "debug_text": {
                  "confirm": "PASSWORD_MISMATCH"
                },
                "description": "FIELDS_VALIDATION_ERROR"
              },
              "response": {}
            }
          },
          "PASSWORD_WEAK": {
            "value": {
              "error": {
                "code": "500",
                "debug_text": {
                  "confirm": "PASSWORD_WEAK",
                  "password": "PASSWORD_WEAK"
                },
                "description": "FIELDS_VALIDATION_ERROR"
              },
              "response": {}
            }
          },
          "Success Full": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "oauths": [
                  {
                    "created_at": "2021-10-22T10:06:16",
                    "email": "user.mail@gmail.com",
                    "provider": "apple",
                    "provider_user_id": "000074.9680b3111e1148658421beb86b532d70.0638"
                  },
                  {
                    "created_at": "2021-10-22T10:06:16",
                    "email": "user.mail@gmail.com",
                    "provider": "facebook",
                    "provider_user_id": "2854200118148984"
                  },
                  {
                    "created_at": "2021-10-22T10:06:16",
                    "email": "user.mail@gmail.com",
                    "provider": "google",
                    "provider_user_id": "114268033339011136503"
                  }
                ],
                "user": {
                  "email": "user.mail@gmail.com",
                  "idx": "user_e1a34d21-25f2-4fb0-9e20-a1646da29326",
                  "is_active": true,
                  "last_active_dt": "2021-10-22T10:06:16",
                  "register_dt": "2021-10-17T07:06:16",
                  "username": "User Name"
                }
              }
            }
          },
          "Success No OAuth": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "oauths": [],
                "user": {
                  "email": "user.mail@gmail.com",
                  "idx": "user_e1a34d21-25f2-4fb0-9e20-a1646da29326",
                  "is_active": true,
                  "last_active_dt": "2021-10-22T10:06:16",
                  "register_dt": "2021-10-17T07:06:16",
                  "username": "User Name"
                }
              }
            }
          }
        },
        "properties": {
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserInfoPostRes.ResponseErrorSer"
              },
              {
                "type": "object"
              }
            ],
            "default": {
              "code": 0,
              "debug_text": "NONE",
              "description": "NONE"
            },
            "description": "Response error detail description",
            "title": "Error"
          },
          "response": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserInfoPostRes.UserInfoResData"
              },
              {
                "type": "object"
              }
            ],
            "default": {},
            "description": "Response contains User info, User OAuth types",
            "title": "Response"
          }
        },
        "title": "UserInfoPostRes",
        "type": "object"
      },
      "4ac81a8.UserInfoPostRes.OAuthProviders": {
        "description": "An enumeration.",
        "enum": [
          "google",
          "facebook",
          "apple"
        ],
        "title": "OAuthProviders",
        "type": "string"
      },
      "4ac81a8.UserInfoPostRes.OAuthSer": {
        "description": "Main OAuth model serializer",
        "example": {
          "created_at": "2021-10-22T10:06:16",
          "email": "user.mail@gmail.com",
          "provider": "apple",
          "provider_user_id": "000074.9680b3111e1148658421beb86b532d70.0638"
        },
        "example_list": [
          {
            "created_at": "2021-10-22T10:06:16",
            "email": "user.mail@gmail.com",
            "provider": "apple",
            "provider_user_id": "000074.9680b3111e1148658421beb86b532d70.0638"
          },
          {
            "created_at": "2021-10-22T10:06:16",
            "email": "user.mail@gmail.com",
            "provider": "facebook",
            "provider_user_id": "2854200118148984"
          },
          {
            "created_at": "2021-10-22T10:06:16",
            "email": "user.mail@gmail.com",
            "provider": "google",
            "provider_user_id": "114268033339011136503"
          }
        ],
        "examples": {
          "Apple provider": {
            "value": {
              "created_at": "2021-10-22T10:06:16",
              "email": "user.mail@gmail.com",
              "provider": "apple",
              "provider_user_id": "000074.9680b3111e1148658421beb86b532d70.0638"
            }
          },
          "Facebook provider": {
            "value": {
              "created_at": "2021-10-22T10:06:16",
              "email": "user.mail@gmail.com",
              "provider": "facebook",
              "provider_user_id": "2854200118148984"
            }
          },
          "Google provider": {
            "value": {
              "created_at": "2021-10-22T10:06:16",
              "email": "user.mail@gmail.com",
              "provider": "google",
              "provider_user_id": "114268033339011136503"
            }
          }
        },
        "properties": {
          "created_at": {
            "description": "OAuth register datetime",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "email": {
            "description": "Unique OAuth email, if it is exist",
            "title": "Email",
            "type": "string"
          },
          "provider": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserInfoPostRes.OAuthProviders"
              }
            ],
            "description": "OAuth provider name"
          },
          "provider_user_id": {
            "description": "Unique provider OAuth ID, for each provider this ID is different",
            "title": "Provider User Id",
            "type": "string"
          }
        },
        "required": [
          "provider_user_id",
          "provider",
          "created_at"
        ],
        "title": "OAuthSer",
        "type": "object"
      },
      "4ac81a8.UserInfoPostRes.ResponseErrorSer": {
        "description": "Class prepare basic `Config` for other Pydantic models.\nUse for all default service models if need updated `Config`",
        "properties": {
          "code": {
            "default": 0,
            "description": "Contains error code. If `0` - all is OK",
            "title": "Code",
            "type": "integer"
          },
          "debug_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "object"
              }
            ],
            "default": "NONE",
            "description": "Contains custom debug text, if `code=500` field contains dict with `{field_name: ERROR_CODE_NAME}`",
            "title": "Debug Text"
          },
          "description": {
            "default": "NONE",
            "description": "Contains error code name",
            "title": "Description",
            "type": "string"
          }
        },
        "title": "ResponseErrorSer",
        "type": "object"
      },
      "4ac81a8.UserInfoPostRes.UserInfoResData": {
        "properties": {
          "oauths": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/4ac81a8.UserInfoPostRes.OAuthSer"
                },
                "type": "array"
              },
              {
                "items": {},
                "type": "array"
              }
            ],
            "description": "List of User OAuth's, or empty list if nothing exist",
            "title": "Oauths"
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserInfoPostRes.UserSer"
              }
            ],
            "description": "User info",
            "title": "User"
          }
        },
        "required": [
          "user",
          "oauths"
        ],
        "title": "UserInfoResData",
        "type": "object"
      },
      "4ac81a8.UserInfoPostRes.UserSer": {
        "description": "Main User model serializer",
        "example": {
          "email": "user.mail@gmail.com",
          "idx": "user_e1a34d21-25f2-4fb0-9e20-a1646da29326",
          "is_active": true,
          "last_active_dt": "2021-10-22T10:06:16",
          "register_dt": "2021-10-17T07:06:16",
          "username": "User Name"
        },
        "examples": {
          "Apple provider": {
            "value": {
              "created_at": "2021-10-22T10:06:16",
              "email": "user.mail@gmail.com",
              "provider": "apple",
              "provider_user_id": "000074.9680b3111e1148658421beb86b532d70.0638"
            }
          },
          "Facebook provider": {
            "value": {
              "created_at": "2021-10-22T10:06:16",
              "email": "user.mail@gmail.com",
              "provider": "facebook",
              "provider_user_id": "2854200118148984"
            }
          },
          "Google provider": {
            "value": {
              "created_at": "2021-10-22T10:06:16",
              "email": "user.mail@gmail.com",
              "provider": "google",
              "provider_user_id": "114268033339011136503"
            }
          }
        },
        "properties": {
          "email": {
            "description": "Unique User email, if it is exist",
            "title": "Email",
            "type": "string"
          },
          "idx": {
            "description": "Unique system User IDX, looks like `prefix + UUID4`",
            "title": "Idx",
            "type": "string"
          },
          "is_active": {
            "description": "User active status",
            "title": "Is Active",
            "type": "boolean"
          },
          "last_active_dt": {
            "description": "User datetime of the last interaction with the server",
            "format": "date-time",
            "title": "Last Active Dt",
            "type": "string"
          },
          "register_dt": {
            "description": "User register datetime",
            "format": "date-time",
            "title": "Register Dt",
            "type": "string"
          },
          "username": {
            "description": "User name",
            "title": "Username",
            "type": "string"
          }
        },
        "required": [
          "idx",
          "username",
          "is_active",
          "register_dt",
          "last_active_dt"
        ],
        "title": "UserSer",
        "type": "object"
      },
      "4ac81a8.UserInfoReq": {
        "example": {
          "confirm": "0123456789",
          "email": "new.mail@gmail.com",
          "password": "0123456789",
          "username": "Some Username"
        },
        "examples": {
          "Full payload": {
            "value": {
              "confirm": "0123456789",
              "email": "new.mail@gmail.com",
              "password": "0123456789",
              "username": "Some Username"
            }
          },
          "Only email": {
            "value": {
              "email": "new.mail@gmail.com"
            }
          },
          "Only password": {
            "value": {
              "confirm": "0123456789",
              "password": "0123456789"
            }
          },
          "Only username": {
            "value": {
              "username": "Some Username"
            }
          }
        },
        "properties": {
          "confirm": {
            "description": "Confirm for new user password",
            "title": "Confirm",
            "type": "string"
          },
          "email": {
            "description": "New user email",
            "title": "Email",
            "type": "string"
          },
          "password": {
            "description": "New password",
            "title": "Password",
            "type": "string"
          },
          "username": {
            "description": "New username",
            "title": "Username",
            "type": "string"
          }
        },
        "title": "UserInfoReq",
        "type": "object"
      },
      "4ac81a8.UserPurchaseGetQuery": {
        "example": {
          "purchase_token": "jfklnddpnkjnniok---pirnA"
        },
        "properties": {
          "purchase_token": {
            "description": "Unique purchase token from payment system",
            "title": "Purchase Token",
            "type": "string"
          }
        },
        "title": "UserPurchaseGetQuery",
        "type": "object"
      },
      "4ac81a8.UserPurchaseGetRes": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "examples": {
          "Google Purchase": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "purchase": {
                  "autoRenewing": true,
                  "created_dt": "2021-10-22T10:06:16",
                  "event_status": "SUBSCRIPTION_RENEWED",
                  "expire_dt": "2021-12-21T10:06:16",
                  "is_active": true,
                  "order_id": "GPA.3337-2222-3333-97266..5",
                  "product_id": "year-extend-promo-2w-trial",
                  "product_term": "year",
                  "product_trial": "14",
                  "product_type": "auto_renewable",
                  "purchase_token": "jfklnddpnkjn---wO6CpirnA",
                  "status": "renew",
                  "store_type": "google",
                  "type": "google",
                  "updated_dt": "2021-10-24T14:06:16"
                }
              }
            }
          },
          "No Purchase": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "purchase": null
              }
            }
          },
          "Promotion Purchase": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "purchase": {
                  "autoRenewing": false,
                  "created_dt": "2021-10-22T10:06:16",
                  "event_status": "PURCHASED",
                  "expire_dt": "2021-11-21T10:06:16",
                  "is_active": true,
                  "order_id": "promotion_4c3ec87e-2d5d-43fe-a27d-ae8d828db7a5_0",
                  "product_id": "app.loona.1m.Tester",
                  "product_term": "year",
                  "product_trial": "14",
                  "product_type": "auto_renewable",
                  "purchase_token": "promotion_af4d0306-2e80-4cfd-a304-43eaaba3e94e",
                  "status": "other",
                  "store_type": "promotion",
                  "type": "promotion",
                  "updated_dt": "2021-10-22T10:06:16"
                }
              }
            }
          },
          "Recurly Purchase": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "purchase": {
                  "autoRenewing": true,
                  "created_dt": "2021-10-22T10:06:16",
                  "event_status": "NEW_SUBSCRIPTION_NOTIFICATION",
                  "expire_dt": "2021-12-21T10:06:16",
                  "is_active": true,
                  "order_id": "orzehwbz11ge",
                  "product_id": "year-extend-promo-2w-trial",
                  "product_term": "year",
                  "product_trial": "14",
                  "product_type": "auto_renewable",
                  "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
                  "status": "other",
                  "store_type": "recurly",
                  "type": "recurly",
                  "updated_dt": "2021-10-24T14:06:16"
                }
              }
            }
          },
          "Recurly Purchase Canceled": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "purchase": {
                  "autoRenewing": false,
                  "created_dt": "2021-10-22T10:06:16",
                  "event_status": "CANCELED_SUBSCRIPTION_NOTIFICATION",
                  "expire_dt": "2021-10-26T10:06:16",
                  "is_active": true,
                  "order_id": "orzehwbz11ge",
                  "product_id": "year-extend-promo-2w-trial",
                  "product_term": "year",
                  "product_trial": "14",
                  "product_type": "auto_renewable",
                  "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
                  "status": "canceled",
                  "store_type": "recurly",
                  "type": "recurly",
                  "updated_dt": "2021-10-24T14:06:16"
                }
              }
            }
          }
        },
        "properties": {
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserPurchaseGetRes.ResponseErrorSer"
              },
              {
                "type": "object"
              }
            ],
            "default": {
              "code": 0,
              "debug_text": "NONE",
              "description": "NONE"
            },
            "description": "Response error detail description",
            "title": "Error"
          },
          "response": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "$ref": "#/components/schemas/4ac81a8.UserPurchaseGetRes.UserPurchaseResData"
              }
            ],
            "description": "Response contains Purchase info",
            "title": "Response"
          }
        },
        "required": [
          "response"
        ],
        "title": "UserPurchaseGetRes",
        "type": "object"
      },
      "4ac81a8.UserPurchaseGetRes.DateISO8601": {
        "description": "An enumeration.",
        "enum": [
          "days",
          "week",
          "months",
          "quarter",
          "year",
          "yearly",
          "lifetime"
        ],
        "title": "DateISO8601",
        "type": "string"
      },
      "4ac81a8.UserPurchaseGetRes.ProductTypes": {
        "description": "An enumeration.",
        "enum": [
          "consumable",
          "non_consumable",
          "auto_renewable",
          "non_renewable"
        ],
        "title": "ProductTypes",
        "type": "string"
      },
      "4ac81a8.UserPurchaseGetRes.PurchaseSer": {
        "description": "Main Purchase model serializer",
        "example": {
          "autoRenewing": true,
          "created_dt": "2021-10-22T10:06:16",
          "event_status": "SUBSCRIPTION_RENEWED",
          "expire_dt": "2021-12-21T10:06:16",
          "is_active": true,
          "order_id": "GPA.3337-2222-3333-97266..5",
          "product_id": "year-extend-promo-2w-trial",
          "product_term": "year",
          "product_trial": "14",
          "product_type": "auto_renewable",
          "purchase_token": "jfklnddpnkjn---wO6CpirnA",
          "status": "renew",
          "store_type": "google",
          "type": "recurly",
          "updated_dt": "2021-10-24T14:06:16"
        },
        "examples": {
          "Google Purchase": {
            "value": {
              "autoRenewing": true,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "SUBSCRIPTION_RENEWED",
              "expire_dt": "2021-12-21T10:06:16",
              "is_active": true,
              "order_id": "GPA.3337-2222-3333-97266..5",
              "product_id": "year-extend-promo-2w-trial",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "jfklnddpnkjn---wO6CpirnA",
              "status": "renew",
              "store_type": "google",
              "type": "google",
              "updated_dt": "2021-10-24T14:06:16"
            }
          },
          "No Purchase": {
            "value": null
          },
          "Promotion Purchase": {
            "value": {
              "autoRenewing": false,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "PURCHASED",
              "expire_dt": "2021-11-21T10:06:16",
              "is_active": true,
              "order_id": "promotion_4c3ec87e-2d5d-43fe-a27d-ae8d828db7a5_0",
              "product_id": "app.loona.1m.Tester",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "promotion_af4d0306-2e80-4cfd-a304-43eaaba3e94e",
              "status": "other",
              "store_type": "promotion",
              "type": "promotion",
              "updated_dt": "2021-10-22T10:06:16"
            }
          },
          "Recurly Purchase": {
            "value": {
              "autoRenewing": true,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "NEW_SUBSCRIPTION_NOTIFICATION",
              "expire_dt": "2021-12-21T10:06:16",
              "is_active": true,
              "order_id": "orzehwbz11ge",
              "product_id": "year-extend-promo-2w-trial",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
              "status": "other",
              "store_type": "recurly",
              "type": "recurly",
              "updated_dt": "2021-10-24T14:06:16"
            }
          },
          "Recurly Purchase Canceled": {
            "value": {
              "autoRenewing": false,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "CANCELED_SUBSCRIPTION_NOTIFICATION",
              "expire_dt": "2021-10-26T10:06:16",
              "is_active": true,
              "order_id": "orzehwbz11ge",
              "product_id": "year-extend-promo-2w-trial",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
              "status": "canceled",
              "store_type": "recurly",
              "type": "recurly",
              "updated_dt": "2021-10-24T14:06:16"
            }
          }
        },
        "properties": {
          "autoRenewing": {
            "default": false,
            "description": "Auto Renewing Purchase status",
            "title": "Autorenewing",
            "type": "boolean"
          },
          "created_dt": {
            "description": "Subscription create datetime",
            "format": "date-time",
            "title": "Created Dt",
            "type": "string"
          },
          "event_status": {
            "description": "Subscription status based on payment system webhooks titles/names",
            "title": "Event Status",
            "type": "string"
          },
          "expire_dt": {
            "description": "Subscription expire datetime + 14 hours for time zones compensation",
            "format": "date-time",
            "title": "Expire Dt",
            "type": "string"
          },
          "is_active": {
            "description": "Basic system purchase active status",
            "title": "Is Active",
            "type": "boolean"
          },
          "order_id": {
            "description": "Order ID from payment system",
            "title": "Order Id",
            "type": "string"
          },
          "product_id": {
            "description": "Product name from payment system",
            "title": "Product Id",
            "type": "string"
          },
          "product_term": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserPurchaseGetRes.DateISO8601"
              }
            ],
            "default": "week",
            "description": "Term period for subscription"
          },
          "product_trial": {
            "default": "0",
            "description": "Trial period for product plan",
            "title": "Product Trial",
            "type": "string"
          },
          "product_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserPurchaseGetRes.ProductTypes"
              }
            ],
            "default": "non_consumable",
            "description": "Show, what can be done with the purchase"
          },
          "purchase_token": {
            "description": "Unique purchase token from payment system",
            "title": "Purchase Token",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserPurchaseGetRes.PurchaseStatus"
              }
            ],
            "default": "other",
            "description": "System purchase status"
          },
          "store_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserPurchaseGetRes.PurchaseTypes"
              }
            ],
            "default": "google",
            "description": "Purchase source type"
          },
          "type": {
            "default": "google",
            "description": "analog store type field",
            "title": "Type",
            "type": "string"
          },
          "updated_dt": {
            "description": "Subscription last change datetime",
            "format": "date-time",
            "title": "Updated Dt",
            "type": "string"
          }
        },
        "required": [
          "product_id",
          "purchase_token",
          "order_id",
          "event_status",
          "is_active",
          "created_dt",
          "updated_dt",
          "expire_dt"
        ],
        "title": "PurchaseSer",
        "type": "object"
      },
      "4ac81a8.UserPurchaseGetRes.PurchaseStatus": {
        "description": "An enumeration.",
        "enum": [
          "other",
          "trial",
          "renew",
          "grace",
          "canceled",
          "expired",
          "test",
          "gift"
        ],
        "title": "PurchaseStatus",
        "type": "string"
      },
      "4ac81a8.UserPurchaseGetRes.PurchaseTypes": {
        "description": "An enumeration.",
        "enum": [
          "google",
          "apple",
          "recurly",
          "custom",
          "promotion",
          "gift_card",
          "gift_code"
        ],
        "title": "PurchaseTypes",
        "type": "string"
      },
      "4ac81a8.UserPurchaseGetRes.ResponseErrorSer": {
        "description": "Class prepare basic `Config` for other Pydantic models.\nUse for all default service models if need updated `Config`",
        "properties": {
          "code": {
            "default": 0,
            "description": "Contains error code. If `0` - all is OK",
            "title": "Code",
            "type": "integer"
          },
          "debug_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "object"
              }
            ],
            "default": "NONE",
            "description": "Contains custom debug text, if `code=500` field contains dict with `{field_name: ERROR_CODE_NAME}`",
            "title": "Debug Text"
          },
          "description": {
            "default": "NONE",
            "description": "Contains error code name",
            "title": "Description",
            "type": "string"
          }
        },
        "title": "ResponseErrorSer",
        "type": "object"
      },
      "4ac81a8.UserPurchaseGetRes.UserPurchaseResData": {
        "properties": {
          "purchase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserPurchaseGetRes.PurchaseSer"
              }
            ],
            "description": "Purchase info",
            "title": "Purchase"
          }
        },
        "title": "UserPurchaseResData",
        "type": "object"
      },
      "4ac81a8.UserPurchasePostRes": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "examples": {
          "Google Purchase": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "purchase": {
                  "autoRenewing": true,
                  "created_dt": "2021-10-22T10:06:16",
                  "event_status": "SUBSCRIPTION_RENEWED",
                  "expire_dt": "2021-12-21T10:06:16",
                  "is_active": true,
                  "order_id": "GPA.3337-2222-3333-97266..5",
                  "product_id": "year-extend-promo-2w-trial",
                  "product_term": "year",
                  "product_trial": "14",
                  "product_type": "auto_renewable",
                  "purchase_token": "jfklnddpnkjn---wO6CpirnA",
                  "status": "renew",
                  "store_type": "google",
                  "type": "google",
                  "updated_dt": "2021-10-24T14:06:16"
                }
              }
            }
          },
          "Promotion Purchase": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "purchase": {
                  "autoRenewing": false,
                  "created_dt": "2021-10-22T10:06:16",
                  "event_status": "PURCHASED",
                  "expire_dt": "2021-11-21T10:06:16",
                  "is_active": true,
                  "order_id": "promotion_4c3ec87e-2d5d-43fe-a27d-ae8d828db7a5_0",
                  "product_id": "app.loona.1m.Tester",
                  "product_term": "year",
                  "product_trial": "14",
                  "product_type": "auto_renewable",
                  "purchase_token": "promotion_af4d0306-2e80-4cfd-a304-43eaaba3e94e",
                  "status": "other",
                  "store_type": "promotion",
                  "type": "promotion",
                  "updated_dt": "2021-10-22T10:06:16"
                }
              }
            }
          },
          "Purchase Already Exist": {
            "value": {
              "error": {
                "code": 409,
                "debug_text": "User purchase data exist",
                "description": "DATA_EXIST"
              },
              "response": {
                "purchase": {
                  "autoRenewing": true,
                  "created_dt": "2021-10-22T10:06:16",
                  "event_status": "SUBSCRIPTION_RENEWED",
                  "expire_dt": "2021-12-21T10:06:16",
                  "is_active": true,
                  "order_id": "GPA.3337-2222-3333-97266..5",
                  "product_id": "year-extend-promo-2w-trial",
                  "product_term": "year",
                  "product_trial": "14",
                  "product_type": "auto_renewable",
                  "purchase_token": "jfklnddpnkjn---wO6CpirnA",
                  "status": "renew",
                  "store_type": "google",
                  "type": "recurly",
                  "updated_dt": "2021-10-24T14:06:16"
                }
              }
            }
          },
          "Recurly Purchase": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "purchase": {
                  "autoRenewing": true,
                  "created_dt": "2021-10-22T10:06:16",
                  "event_status": "NEW_SUBSCRIPTION_NOTIFICATION",
                  "expire_dt": "2021-12-21T10:06:16",
                  "is_active": true,
                  "order_id": "orzehwbz11ge",
                  "product_id": "year-extend-promo-2w-trial",
                  "product_term": "year",
                  "product_trial": "14",
                  "product_type": "auto_renewable",
                  "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
                  "status": "other",
                  "store_type": "recurly",
                  "type": "recurly",
                  "updated_dt": "2021-10-24T14:06:16"
                }
              }
            }
          },
          "Recurly Purchase Canceled": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "purchase": {
                  "autoRenewing": false,
                  "created_dt": "2021-10-22T10:06:16",
                  "event_status": "CANCELED_SUBSCRIPTION_NOTIFICATION",
                  "expire_dt": "2021-10-26T10:06:16",
                  "is_active": true,
                  "order_id": "orzehwbz11ge",
                  "product_id": "year-extend-promo-2w-trial",
                  "product_term": "year",
                  "product_trial": "14",
                  "product_type": "auto_renewable",
                  "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
                  "status": "canceled",
                  "store_type": "recurly",
                  "type": "recurly",
                  "updated_dt": "2021-10-24T14:06:16"
                }
              }
            }
          },
          "TYPE_INVALID": {
            "value": {
              "error": {
                "code": 500,
                "debug_text": {
                  "type": "TYPE_INVALID"
                },
                "description": "FIELDS_VALIDATION_ERROR"
              },
              "response": {}
            }
          }
        },
        "properties": {
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserPurchasePostRes.ResponseErrorSer"
              },
              {
                "type": "object"
              }
            ],
            "default": {
              "code": 0,
              "debug_text": "NONE",
              "description": "NONE"
            },
            "description": "Response error detail description",
            "title": "Error"
          },
          "response": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserPurchasePostRes.UserPurchaseResData"
              }
            ],
            "description": "Response contains Purchase info",
            "title": "Response"
          }
        },
        "required": [
          "response"
        ],
        "title": "UserPurchasePostRes",
        "type": "object"
      },
      "4ac81a8.UserPurchasePostRes.DateISO8601": {
        "description": "An enumeration.",
        "enum": [
          "days",
          "week",
          "months",
          "quarter",
          "year",
          "yearly",
          "lifetime"
        ],
        "title": "DateISO8601",
        "type": "string"
      },
      "4ac81a8.UserPurchasePostRes.ProductTypes": {
        "description": "An enumeration.",
        "enum": [
          "consumable",
          "non_consumable",
          "auto_renewable",
          "non_renewable"
        ],
        "title": "ProductTypes",
        "type": "string"
      },
      "4ac81a8.UserPurchasePostRes.PurchaseSer": {
        "description": "Main Purchase model serializer",
        "example": {
          "autoRenewing": true,
          "created_dt": "2021-10-22T10:06:16",
          "event_status": "SUBSCRIPTION_RENEWED",
          "expire_dt": "2021-12-21T10:06:16",
          "is_active": true,
          "order_id": "GPA.3337-2222-3333-97266..5",
          "product_id": "year-extend-promo-2w-trial",
          "product_term": "year",
          "product_trial": "14",
          "product_type": "auto_renewable",
          "purchase_token": "jfklnddpnkjn---wO6CpirnA",
          "status": "renew",
          "store_type": "google",
          "type": "recurly",
          "updated_dt": "2021-10-24T14:06:16"
        },
        "examples": {
          "Google Purchase": {
            "value": {
              "autoRenewing": true,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "SUBSCRIPTION_RENEWED",
              "expire_dt": "2021-12-21T10:06:16",
              "is_active": true,
              "order_id": "GPA.3337-2222-3333-97266..5",
              "product_id": "year-extend-promo-2w-trial",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "jfklnddpnkjn---wO6CpirnA",
              "status": "renew",
              "store_type": "google",
              "type": "google",
              "updated_dt": "2021-10-24T14:06:16"
            }
          },
          "No Purchase": {
            "value": null
          },
          "Promotion Purchase": {
            "value": {
              "autoRenewing": false,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "PURCHASED",
              "expire_dt": "2021-11-21T10:06:16",
              "is_active": true,
              "order_id": "promotion_4c3ec87e-2d5d-43fe-a27d-ae8d828db7a5_0",
              "product_id": "app.loona.1m.Tester",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "promotion_af4d0306-2e80-4cfd-a304-43eaaba3e94e",
              "status": "other",
              "store_type": "promotion",
              "type": "promotion",
              "updated_dt": "2021-10-22T10:06:16"
            }
          },
          "Recurly Purchase": {
            "value": {
              "autoRenewing": true,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "NEW_SUBSCRIPTION_NOTIFICATION",
              "expire_dt": "2021-12-21T10:06:16",
              "is_active": true,
              "order_id": "orzehwbz11ge",
              "product_id": "year-extend-promo-2w-trial",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
              "status": "other",
              "store_type": "recurly",
              "type": "recurly",
              "updated_dt": "2021-10-24T14:06:16"
            }
          },
          "Recurly Purchase Canceled": {
            "value": {
              "autoRenewing": false,
              "created_dt": "2021-10-22T10:06:16",
              "event_status": "CANCELED_SUBSCRIPTION_NOTIFICATION",
              "expire_dt": "2021-10-26T10:06:16",
              "is_active": true,
              "order_id": "orzehwbz11ge",
              "product_id": "year-extend-promo-2w-trial",
              "product_term": "year",
              "product_trial": "14",
              "product_type": "auto_renewable",
              "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
              "status": "canceled",
              "store_type": "recurly",
              "type": "recurly",
              "updated_dt": "2021-10-24T14:06:16"
            }
          }
        },
        "properties": {
          "autoRenewing": {
            "default": false,
            "description": "Auto Renewing Purchase status",
            "title": "Autorenewing",
            "type": "boolean"
          },
          "created_dt": {
            "description": "Subscription create datetime",
            "format": "date-time",
            "title": "Created Dt",
            "type": "string"
          },
          "event_status": {
            "description": "Subscription status based on payment system webhooks titles/names",
            "title": "Event Status",
            "type": "string"
          },
          "expire_dt": {
            "description": "Subscription expire datetime + 14 hours for time zones compensation",
            "format": "date-time",
            "title": "Expire Dt",
            "type": "string"
          },
          "is_active": {
            "description": "Basic system purchase active status",
            "title": "Is Active",
            "type": "boolean"
          },
          "order_id": {
            "description": "Order ID from payment system",
            "title": "Order Id",
            "type": "string"
          },
          "product_id": {
            "description": "Product name from payment system",
            "title": "Product Id",
            "type": "string"
          },
          "product_term": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserPurchasePostRes.DateISO8601"
              }
            ],
            "default": "week",
            "description": "Term period for subscription"
          },
          "product_trial": {
            "default": "0",
            "description": "Trial period for product plan",
            "title": "Product Trial",
            "type": "string"
          },
          "product_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserPurchasePostRes.ProductTypes"
              }
            ],
            "default": "non_consumable",
            "description": "Show, what can be done with the purchase"
          },
          "purchase_token": {
            "description": "Unique purchase token from payment system",
            "title": "Purchase Token",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserPurchasePostRes.PurchaseStatus"
              }
            ],
            "default": "other",
            "description": "System purchase status"
          },
          "store_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserPurchasePostRes.PurchaseTypes"
              }
            ],
            "default": "google",
            "description": "Purchase source type"
          },
          "type": {
            "default": "google",
            "description": "analog store type field",
            "title": "Type",
            "type": "string"
          },
          "updated_dt": {
            "description": "Subscription last change datetime",
            "format": "date-time",
            "title": "Updated Dt",
            "type": "string"
          }
        },
        "required": [
          "product_id",
          "purchase_token",
          "order_id",
          "event_status",
          "is_active",
          "created_dt",
          "updated_dt",
          "expire_dt"
        ],
        "title": "PurchaseSer",
        "type": "object"
      },
      "4ac81a8.UserPurchasePostRes.PurchaseStatus": {
        "description": "An enumeration.",
        "enum": [
          "other",
          "trial",
          "renew",
          "grace",
          "canceled",
          "expired",
          "test",
          "gift"
        ],
        "title": "PurchaseStatus",
        "type": "string"
      },
      "4ac81a8.UserPurchasePostRes.PurchaseTypes": {
        "description": "An enumeration.",
        "enum": [
          "google",
          "apple",
          "recurly",
          "custom",
          "promotion",
          "gift_card",
          "gift_code"
        ],
        "title": "PurchaseTypes",
        "type": "string"
      },
      "4ac81a8.UserPurchasePostRes.ResponseErrorSer": {
        "description": "Class prepare basic `Config` for other Pydantic models.\nUse for all default service models if need updated `Config`",
        "properties": {
          "code": {
            "default": 0,
            "description": "Contains error code. If `0` - all is OK",
            "title": "Code",
            "type": "integer"
          },
          "debug_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "object"
              }
            ],
            "default": "NONE",
            "description": "Contains custom debug text, if `code=500` field contains dict with `{field_name: ERROR_CODE_NAME}`",
            "title": "Debug Text"
          },
          "description": {
            "default": "NONE",
            "description": "Contains error code name",
            "title": "Description",
            "type": "string"
          }
        },
        "title": "ResponseErrorSer",
        "type": "object"
      },
      "4ac81a8.UserPurchasePostRes.UserPurchaseResData": {
        "properties": {
          "purchase": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserPurchasePostRes.PurchaseSer"
              }
            ],
            "description": "Purchase info",
            "title": "Purchase"
          }
        },
        "title": "UserPurchaseResData",
        "type": "object"
      },
      "4ac81a8.UserPurchaseReq": {
        "example": {
          "expire_dt": "2021-10-27T10:06:16",
          "order_id": "GPA.1111-1111-1111-97222..5",
          "product_id": "app.loona.ar.m.default",
          "purchase_token": "jfklnddpnkjnniok---pirnA",
          "store_type": "google"
        },
        "examples": {
          "Google subscription create": {
            "value": {
              "expire_dt": "2021-10-27T10:06:16",
              "order_id": "GPA.1111-1111-1111-97222..5",
              "product_id": "app.loona.ar.m.default",
              "purchase_token": "jfklnddpnkjnniok---pirnA",
              "store_type": "google"
            }
          }
        },
        "properties": {
          "order_id": {
            "title": "Order Id",
            "type": "string"
          },
          "product_id": {
            "title": "Product Id",
            "type": "string"
          },
          "purchase_token": {
            "title": "Purchase Token",
            "type": "string"
          },
          "store_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/4ac81a8.UserPurchaseReq.PurchaseTypes"
              }
            ],
            "default": "google",
            "description": "Purchase source type"
          }
        },
        "required": [
          "product_id",
          "purchase_token",
          "order_id"
        ],
        "title": "UserPurchaseReq",
        "type": "object"
      },
      "4ac81a8.UserPurchaseReq.PurchaseTypes": {
        "description": "An enumeration.",
        "enum": [
          "google",
          "apple",
          "recurly",
          "custom",
          "promotion",
          "gift_card",
          "gift_code"
        ],
        "title": "PurchaseTypes",
        "type": "string"
      },
      "67a4d4f.JWTCheckRes": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "examples": {
          "JWT_OUTDATED. 401": {
            "value": {
              "error": {
                "code": 402,
                "debug_text": "JWT_OUTDATED",
                "description": "JWT_OUTDATED"
              },
              "response": {}
            }
          },
          "JWT_VALIDATION_ERROR. 501": {
            "value": {
              "error": {
                "code": 501,
                "debug_text": "JWT_VALIDATION_ERROR",
                "description": "JWT_VALIDATION_ERROR"
              },
              "response": {}
            }
          },
          "Success": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {}
            }
          }
        },
        "properties": {
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/67a4d4f.JWTCheckRes.ResponseErrorSer"
              },
              {
                "type": "object"
              }
            ],
            "default": {
              "code": 0,
              "debug_text": "NONE",
              "description": "NONE"
            },
            "description": "Response error detail description",
            "title": "Error"
          },
          "response": {
            "default": {},
            "description": "Response data field",
            "title": "Response",
            "type": "object"
          }
        },
        "title": "JWTCheckRes",
        "type": "object"
      },
      "67a4d4f.JWTCheckRes.ResponseErrorSer": {
        "description": "Class prepare basic `Config` for other Pydantic models.\nUse for all default service models if need updated `Config`",
        "properties": {
          "code": {
            "default": 0,
            "description": "Contains error code. If `0` - all is OK",
            "title": "Code",
            "type": "integer"
          },
          "debug_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "object"
              }
            ],
            "default": "NONE",
            "description": "Contains custom debug text, if `code=500` field contains dict with `{field_name: ERROR_CODE_NAME}`",
            "title": "Debug Text"
          },
          "description": {
            "default": "NONE",
            "description": "Contains error code name",
            "title": "Description",
            "type": "string"
          }
        },
        "title": "ResponseErrorSer",
        "type": "object"
      },
      "67a4d4f.JWTRefreshRes": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "examples": {
          "JWT_VALIDATION_ERROR. 501": {
            "value": {
              "error": {
                "code": 501,
                "debug_text": "JWT_VALIDATION_ERROR",
                "description": "JWT_VALIDATION_ERROR"
              },
              "response": {}
            }
          },
          "NOT_FOUND. 404": {
            "value": {
              "error": {
                "code": 404,
                "debug_text": "User not found",
                "description": "NOT_FOUND"
              },
              "response": {}
            }
          },
          "Success": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "auth_token": "33904954-0963-4b69-a1c6-9d3f6a365342",
                "user": {
                  "email": "user.mail@gmail.com",
                  "idx": "user_e1a34d21-25f2-4fb0-9e20-a1646da29326",
                  "is_active": true,
                  "last_active_dt": "Fri, 22 Oct 2021 10:06:16 GMT",
                  "register_dt": "Sun, 17 Oct 2021 07:06:16 GMT",
                  "username": "User Name"
                }
              }
            }
          }
        },
        "properties": {
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/67a4d4f.JWTRefreshRes.ResponseErrorSer"
              },
              {
                "type": "object"
              }
            ],
            "default": {
              "code": 0,
              "debug_text": "NONE",
              "description": "NONE"
            },
            "description": "Response error detail description",
            "title": "Error"
          },
          "response": {
            "allOf": [
              {
                "$ref": "#/components/schemas/67a4d4f.JWTRefreshRes.UserInfoResData"
              }
            ],
            "default": {},
            "description": "Response contains User info, User OAuth types",
            "title": "Response"
          }
        },
        "title": "JWTRefreshRes",
        "type": "object"
      },
      "67a4d4f.JWTRefreshRes.ResponseErrorSer": {
        "description": "Class prepare basic `Config` for other Pydantic models.\nUse for all default service models if need updated `Config`",
        "properties": {
          "code": {
            "default": 0,
            "description": "Contains error code. If `0` - all is OK",
            "title": "Code",
            "type": "integer"
          },
          "debug_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "object"
              }
            ],
            "default": "NONE",
            "description": "Contains custom debug text, if `code=500` field contains dict with `{field_name: ERROR_CODE_NAME}`",
            "title": "Debug Text"
          },
          "description": {
            "default": "NONE",
            "description": "Contains error code name",
            "title": "Description",
            "type": "string"
          }
        },
        "title": "ResponseErrorSer",
        "type": "object"
      },
      "67a4d4f.JWTRefreshRes.UserInfoResData": {
        "properties": {
          "auth_token": {
            "description": "Field contains user auth JWT",
            "title": "Auth Token",
            "type": "string"
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/67a4d4f.JWTRefreshRes.UserSer"
              }
            ],
            "description": "User info",
            "title": "User"
          }
        },
        "required": [
          "user",
          "auth_token"
        ],
        "title": "UserInfoResData",
        "type": "object"
      },
      "67a4d4f.JWTRefreshRes.UserSer": {
        "description": "Main User model serializer",
        "example": {
          "email": "user.mail@gmail.com",
          "idx": "user_e1a34d21-25f2-4fb0-9e20-a1646da29326",
          "is_active": true,
          "last_active_dt": "2021-10-22T10:06:16",
          "register_dt": "2021-10-17T07:06:16",
          "username": "User Name"
        },
        "examples": {
          "Apple provider": {
            "value": {
              "created_at": "2021-10-22T10:06:16",
              "email": "user.mail@gmail.com",
              "provider": "apple",
              "provider_user_id": "000074.9680b3111e1148658421beb86b532d70.0638"
            }
          },
          "Facebook provider": {
            "value": {
              "created_at": "2021-10-22T10:06:16",
              "email": "user.mail@gmail.com",
              "provider": "facebook",
              "provider_user_id": "2854200118148984"
            }
          },
          "Google provider": {
            "value": {
              "created_at": "2021-10-22T10:06:16",
              "email": "user.mail@gmail.com",
              "provider": "google",
              "provider_user_id": "114268033339011136503"
            }
          }
        },
        "properties": {
          "email": {
            "description": "Unique User email, if it is exist",
            "title": "Email",
            "type": "string"
          },
          "idx": {
            "description": "Unique system User IDX, looks like `prefix + UUID4`",
            "title": "Idx",
            "type": "string"
          },
          "is_active": {
            "description": "User active status",
            "title": "Is Active",
            "type": "boolean"
          },
          "last_active_dt": {
            "description": "User datetime of the last interaction with the server",
            "format": "date-time",
            "title": "Last Active Dt",
            "type": "string"
          },
          "register_dt": {
            "description": "User register datetime",
            "format": "date-time",
            "title": "Register Dt",
            "type": "string"
          },
          "username": {
            "description": "User name",
            "title": "Username",
            "type": "string"
          }
        },
        "required": [
          "idx",
          "username",
          "is_active",
          "register_dt",
          "last_active_dt"
        ],
        "title": "UserSer",
        "type": "object"
      },
      "67a4d4f.RegisterRes": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "examples": {
          "Success": {
            "value": {
              "error": {
                "code": 0,
                "debug_text": "NONE",
                "description": "NONE"
              },
              "response": {
                "auth_token": "eyJ0eXAiOiJKV1Qi.........CjbPoe9ruhlQ",
                "user": {
                  "email": "some-email@loona.app",
                  "idx": "e2f74995-7e5d-4df8-a0a2-497e2d476011",
                  "is_active": true,
                  "last_active_dt": "2020-04-03T17:03:37",
                  "register_dt": "2020-04-03T17:03:37",
                  "username": "some-email"
                }
              }
            }
          },
          "User exist": {
            "value": {
              "error": {
                "code": 409,
                "debug_text": "User exist",
                "description": "DATA_EXIST"
              },
              "response": {}
            }
          },
          "Validation error": {
            "value": {
              "error": {
                "code": 500,
                "debug_text": "1 validation error for .....",
                "description": "FIELDS_VALIDATION_ERROR"
              },
              "response": {}
            }
          }
        },
        "properties": {
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/67a4d4f.RegisterRes.ResponseErrorSer"
              },
              {
                "type": "object"
              }
            ],
            "default": {
              "code": 0,
              "debug_text": "NONE",
              "description": "NONE"
            },
            "description": "Response error detail description",
            "title": "Error"
          },
          "response": {
            "allOf": [
              {
                "$ref": "#/components/schemas/67a4d4f.RegisterRes.RegisterSer"
              }
            ],
            "description": "Response data field",
            "title": "Response"
          }
        },
        "required": [
          "response"
        ],
        "title": "RegisterRes",
        "type": "object"
      },
      "67a4d4f.RegisterRes.RegisterSer": {
        "description": "Class prepare `dict_json` method which convert model to json and than load as dict.\nUse for datetime convert to str and prepare JSON data for PostgreSQL",
        "properties": {
          "auth_token": {
            "description": "JWT",
            "title": "Auth Token",
            "type": "string"
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/67a4d4f.RegisterRes.UserSer"
              }
            ],
            "description": "Response data field",
            "title": "User"
          }
        },
        "required": [
          "user",
          "auth_token"
        ],
        "title": "RegisterSer",
        "type": "object"
      },
      "67a4d4f.RegisterRes.ResponseErrorSer": {
        "description": "Class prepare basic `Config` for other Pydantic models.\nUse for all default service models if need updated `Config`",
        "properties": {
          "code": {
            "default": 0,
            "description": "Contains error code. If `0` - all is OK",
            "title": "Code",
            "type": "integer"
          },
          "debug_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "object"
              }
            ],
            "default": "NONE",
            "description": "Contains custom debug text, if `code=500` field contains dict with `{field_name: ERROR_CODE_NAME}`",
            "title": "Debug Text"
          },
          "description": {
            "default": "NONE",
            "description": "Contains error code name",
            "title": "Description",
            "type": "string"
          }
        },
        "title": "ResponseErrorSer",
        "type": "object"
      },
      "67a4d4f.RegisterRes.UserSer": {
        "description": "Main User model serializer",
        "example": {
          "email": "user.mail@gmail.com",
          "idx": "user_e1a34d21-25f2-4fb0-9e20-a1646da29326",
          "is_active": true,
          "last_active_dt": "2021-10-22T10:06:16",
          "register_dt": "2021-10-17T07:06:16",
          "username": "User Name"
        },
        "examples": {
          "Apple provider": {
            "value": {
              "created_at": "2021-10-22T10:06:16",
              "email": "user.mail@gmail.com",
              "provider": "apple",
              "provider_user_id": "000074.9680b3111e1148658421beb86b532d70.0638"
            }
          },
          "Facebook provider": {
            "value": {
              "created_at": "2021-10-22T10:06:16",
              "email": "user.mail@gmail.com",
              "provider": "facebook",
              "provider_user_id": "2854200118148984"
            }
          },
          "Google provider": {
            "value": {
              "created_at": "2021-10-22T10:06:16",
              "email": "user.mail@gmail.com",
              "provider": "google",
              "provider_user_id": "114268033339011136503"
            }
          }
        },
        "properties": {
          "email": {
            "description": "Unique User email, if it is exist",
            "title": "Email",
            "type": "string"
          },
          "idx": {
            "description": "Unique system User IDX, looks like `prefix + UUID4`",
            "title": "Idx",
            "type": "string"
          },
          "is_active": {
            "description": "User active status",
            "title": "Is Active",
            "type": "boolean"
          },
          "last_active_dt": {
            "description": "User datetime of the last interaction with the server",
            "format": "date-time",
            "title": "Last Active Dt",
            "type": "string"
          },
          "register_dt": {
            "description": "User register datetime",
            "format": "date-time",
            "title": "Register Dt",
            "type": "string"
          },
          "username": {
            "description": "User name",
            "title": "Username",
            "type": "string"
          }
        },
        "required": [
          "idx",
          "username",
          "is_active",
          "register_dt",
          "last_active_dt"
        ],
        "title": "UserSer",
        "type": "object"
      },
      "6a07bef.UnprocessableEntity": {
        "description": "Model of 422 Unprocessable Entity error.",
        "items": {
          "$ref": "#/components/schemas/6a07bef.UnprocessableEntity.UnprocessableEntityElement"
        },
        "title": "UnprocessableEntity",
        "type": "array"
      },
      "6a07bef.UnprocessableEntity.UnprocessableEntityElement": {
        "description": "Model of missing field description.",
        "properties": {
          "ctx": {
            "title": "Error context",
            "type": "object"
          },
          "loc": {
            "items": {
              "type": "string"
            },
            "title": "Missing field name",
            "type": "array"
          },
          "msg": {
            "title": "Error message",
            "type": "string"
          },
          "type": {
            "title": "Error type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "UnprocessableEntityElement",
        "type": "object"
      }
    },
    "securitySchemes": {
      "jwt_header": {
        "description": "Header JWT auth method",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      }
    }
  },
  "info": {
    "description": "LoonaPay project API",
    "title": "LoonaPay API",
    "version": "pay@0.9.9.8"
  },
  "openapi": "3.0.3",
  "paths": {
    "/api/auth/jwt-check": {
      "get": {
        "description": "Return current JWT status info in payload, or return empty payload if all is ok\n\nIf User not send JWT in header `Authorization` - raise 401 error response",
        "operationId": "get_/api/auth/jwt-check",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "JWT_OUTDATED. 401": {
                    "value": {
                      "error": {
                        "code": 402,
                        "debug_text": "JWT_OUTDATED",
                        "description": "JWT_OUTDATED"
                      },
                      "response": {}
                    }
                  },
                  "JWT_VALIDATION_ERROR. 501": {
                    "value": {
                      "error": {
                        "code": 501,
                        "debug_text": "JWT_VALIDATION_ERROR",
                        "description": "JWT_VALIDATION_ERROR"
                      },
                      "response": {}
                    }
                  },
                  "Success": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {}
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/67a4d4f.JWTCheckRes"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {},
                "schema": {
                  "$ref": "#/components/schemas/6a07bef.UnprocessableEntity"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "jwt_header": []
          }
        ],
        "summary": "Try check User auth JWT status",
        "tags": [
          "Auth"
        ]
      },
      "post": {
        "description": "Return current JWT status info in payload, or return empty payload if all is ok\n\nIf User not send JWT in header `Authorization` - raise 401 error response",
        "operationId": "post_/api/auth/jwt-check",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "JWT_OUTDATED. 401": {
                    "value": {
                      "error": {
                        "code": 402,
                        "debug_text": "JWT_OUTDATED",
                        "description": "JWT_OUTDATED"
                      },
                      "response": {}
                    }
                  },
                  "JWT_VALIDATION_ERROR. 501": {
                    "value": {
                      "error": {
                        "code": 501,
                        "debug_text": "JWT_VALIDATION_ERROR",
                        "description": "JWT_VALIDATION_ERROR"
                      },
                      "response": {}
                    }
                  },
                  "Success": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {}
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/67a4d4f.JWTCheckRes"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {},
                "schema": {
                  "$ref": "#/components/schemas/6a07bef.UnprocessableEntity"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "jwt_header": []
          }
        ],
        "summary": "Try check User auth JWT status",
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/jwt-refresh": {
      "get": {
        "description": "If User have active/outdated JWT and this token exist in cache - delete old and create new user token\n\nIf User JWT is not valid or not exist in cache - response with 501 error in payload\n\nIf User not send JWT in header `Authorization` - raise 401 error response",
        "operationId": "get_/api/auth/jwt-refresh",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "JWT_VALIDATION_ERROR. 501": {
                    "value": {
                      "error": {
                        "code": 501,
                        "debug_text": "JWT_VALIDATION_ERROR",
                        "description": "JWT_VALIDATION_ERROR"
                      },
                      "response": {}
                    }
                  },
                  "NOT_FOUND. 404": {
                    "value": {
                      "error": {
                        "code": 404,
                        "debug_text": "User not found",
                        "description": "NOT_FOUND"
                      },
                      "response": {}
                    }
                  },
                  "Success": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "auth_token": "33904954-0963-4b69-a1c6-9d3f6a365342",
                        "user": {
                          "email": "user.mail@gmail.com",
                          "idx": "user_e1a34d21-25f2-4fb0-9e20-a1646da29326",
                          "is_active": true,
                          "last_active_dt": "Fri, 22 Oct 2021 10:06:16 GMT",
                          "register_dt": "Sun, 17 Oct 2021 07:06:16 GMT",
                          "username": "User Name"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/67a4d4f.JWTRefreshRes"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {},
                "schema": {
                  "$ref": "#/components/schemas/6a07bef.UnprocessableEntity"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "jwt_header": []
          }
        ],
        "summary": "Try refresh User auth JWT",
        "tags": [
          "Auth"
        ]
      },
      "post": {
        "description": "If User have active/outdated JWT and this token exist in cache - delete old and create new user token\n\nIf User JWT is not valid or not exist in cache - response with 501 error in payload\n\nIf User not send JWT in header `Authorization` - raise 401 error response",
        "operationId": "post_/api/auth/jwt-refresh",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "JWT_VALIDATION_ERROR. 501": {
                    "value": {
                      "error": {
                        "code": 501,
                        "debug_text": "JWT_VALIDATION_ERROR",
                        "description": "JWT_VALIDATION_ERROR"
                      },
                      "response": {}
                    }
                  },
                  "NOT_FOUND. 404": {
                    "value": {
                      "error": {
                        "code": 404,
                        "debug_text": "User not found",
                        "description": "NOT_FOUND"
                      },
                      "response": {}
                    }
                  },
                  "Success": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "auth_token": "33904954-0963-4b69-a1c6-9d3f6a365342",
                        "user": {
                          "email": "user.mail@gmail.com",
                          "idx": "user_e1a34d21-25f2-4fb0-9e20-a1646da29326",
                          "is_active": true,
                          "last_active_dt": "Fri, 22 Oct 2021 10:06:16 GMT",
                          "register_dt": "Sun, 17 Oct 2021 07:06:16 GMT",
                          "username": "User Name"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/67a4d4f.JWTRefreshRes"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {},
                "schema": {
                  "$ref": "#/components/schemas/6a07bef.UnprocessableEntity"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "jwt_header": []
          }
        ],
        "summary": "Try refresh User auth JWT",
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/register": {
      "post": {
        "description": "",
        "operationId": "post_/api/auth/register",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/43c6089.UserRegisterReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Success": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "auth_token": "eyJ0eXAiOiJKV1Qi.........CjbPoe9ruhlQ",
                        "user": {
                          "email": "some-email@loona.app",
                          "idx": "e2f74995-7e5d-4df8-a0a2-497e2d476011",
                          "is_active": true,
                          "last_active_dt": "2020-04-03T17:03:37",
                          "register_dt": "2020-04-03T17:03:37",
                          "username": "some-email"
                        }
                      }
                    }
                  },
                  "User exist": {
                    "value": {
                      "error": {
                        "code": 409,
                        "debug_text": "User exist",
                        "description": "DATA_EXIST"
                      },
                      "response": {}
                    }
                  },
                  "Validation error": {
                    "value": {
                      "error": {
                        "code": 500,
                        "debug_text": "1 validation error for .....",
                        "description": "FIELDS_VALIDATION_ERROR"
                      },
                      "response": {}
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/67a4d4f.RegisterRes"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {},
                "schema": {
                  "$ref": "#/components/schemas/6a07bef.UnprocessableEntity"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "jwt_header": []
          }
        ],
        "summary": "Register new user account",
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/register-no-password": {
      "post": {
        "description": "",
        "operationId": "post_/api/auth/register-no-password",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/43c6089.UserRegisterNoPasswordReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Success": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "auth_token": "eyJ0eXAiOiJKV1Qi.........CjbPoe9ruhlQ",
                        "user": {
                          "email": "some-email@loona.app",
                          "idx": "e2f74995-7e5d-4df8-a0a2-497e2d476011",
                          "is_active": true,
                          "last_active_dt": "2020-04-03T17:03:37",
                          "register_dt": "2020-04-03T17:03:37",
                          "username": "some-email"
                        }
                      }
                    }
                  },
                  "User exist": {
                    "value": {
                      "error": {
                        "code": 409,
                        "debug_text": "User exist",
                        "description": "DATA_EXIST"
                      },
                      "response": {}
                    }
                  },
                  "Validation error": {
                    "value": {
                      "error": {
                        "code": 500,
                        "debug_text": "1 validation error for .....",
                        "description": "FIELDS_VALIDATION_ERROR"
                      },
                      "response": {}
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/67a4d4f.RegisterRes"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {},
                "schema": {
                  "$ref": "#/components/schemas/6a07bef.UnprocessableEntity"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "jwt_header": []
          }
        ],
        "summary": "Register new User without password",
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/payments/bundle-plan": {
      "get": {
        "description": "Method return info about PlanBundle by bundle_name",
        "operationId": "get_/api/payments/bundle-plan",
        "parameters": [
          {
            "description": "Query parameters",
            "in": "query",
            "name": "bundle_name",
            "required": false,
            "schema": {
              "description": "Query parameters",
              "title": "Bundle Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "GetPlanBundle not found": {
                    "value": {
                      "error": {
                        "code": 404,
                        "debug_text": "GetPlanBundle not found",
                        "description": "NOT_FOUND"
                      },
                      "response": {}
                    }
                  },
                  "Success": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "code": "test25",
                        "currencies": [
                          {
                            "currency": "USD",
                            "setup_fee": 0,
                            "unit_amount": 25
                          }
                        ],
                        "description": "",
                        "discount": 50,
                        "full_price": 50,
                        "id": "p9zgippkqb8d",
                        "interval_length": 1,
                        "interval_unit": "months",
                        "name": "test25",
                        "state": "active",
                        "trial_length": 0,
                        "trial_unit": "days"
                      }
                    }
                  },
                  "Validation error": {
                    "value": {
                      "error": {
                        "code": 500,
                        "debug_text": "1 validation error for .....",
                        "description": "FIELDS_VALIDATION_ERROR"
                      },
                      "response": {}
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/43c6089.BundlePlanRes"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {},
                "schema": {
                  "$ref": "#/components/schemas/6a07bef.UnprocessableEntity"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": null,
        "summary": "Get PlanBundle info",
        "tags": [
          "Payments"
        ]
      }
    },
    "/api/payments/create-subscription": {
      "post": {
        "description": "",
        "operationId": "post_/api/payments/create-subscription",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/43c6089.SubscriptionCreateSer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Already have a subscription": {
                    "value": {
                      "error": {
                        "code": 409,
                        "debug_text": "1st subscription: Base you already have a subscription to this plan.",
                        "description": "DATA_EXIST"
                      },
                      "response": {}
                    }
                  },
                  "Subscription error": {
                    "value": {
                      "error": {
                        "code": 520,
                        "debug_text": "Error in subscription create logic",
                        "description": "SUBSCRIPTION_ERROR"
                      },
                      "response": {}
                    }
                  },
                  "Subscription error. INVALID_CARD_NUMBER": {
                    "value": {
                      "error": {
                        "code": 520,
                        "debug_text": "Your card number is not valid.Please update your card number.",
                        "description": "INVALID_CARD_NUMBER"
                      },
                      "response": {}
                    }
                  },
                  "Success": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "purchase": {
                          "created_dt": "2020-11-19T02:06:26",
                          "event_status": "active",
                          "expire_dt": "2020-11-26T02:06:24",
                          "is_active": true,
                          "order_id": "in_1Hp2XUCLpkOhWmMolQBrwxI4",
                          "product_id": "price_1HowfGCLpkOhWmMoxHrYUegx",
                          "purchase_token": "sub_IPsIZfJVsVokKS",
                          "status": "other",
                          "type": "recurly",
                          "updated_dt": "2020-11-19T02:06:26"
                        }
                      }
                    }
                  },
                  "Transaction error": {
                    "value": {
                      "error": {
                        "code": 522,
                        "debug_text": "Transaction error while purchase create...",
                        "description": "TRANSACTION_ERROR"
                      },
                      "response": {
                        "three_d_secure_action_token_id": "STZUxb_QYbpzBydwROMf3Q"
                      }
                    }
                  },
                  "Validation error": {
                    "value": {
                      "error": {
                        "code": 500,
                        "debug_text": "1 validation error for .....",
                        "description": "FIELDS_VALIDATION_ERROR"
                      },
                      "response": {}
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/3de297c.SubscriptionRes"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {},
                "schema": {
                  "$ref": "#/components/schemas/6a07bef.UnprocessableEntity"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "jwt_header": []
          }
        ],
        "summary": "Create new subscription",
        "tags": [
          "Payments"
        ]
      }
    },
    "/api/payments/create-subscription-no-auth": {
      "post": {
        "description": "Click on the link from the email\n\nMethod return Purchase",
        "operationId": "post_/api/payments/create-subscription-no-auth",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/43c6089.SubscriptionCreateNoAuthSer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Already have a subscription": {
                    "value": {
                      "error": {
                        "code": 409,
                        "debug_text": "1st subscription: Base you already have a subscription to this plan.",
                        "description": "DATA_EXIST"
                      },
                      "response": {}
                    }
                  },
                  "Subscription error": {
                    "value": {
                      "error": {
                        "code": 520,
                        "debug_text": "Error in subscription create logic",
                        "description": "SUBSCRIPTION_ERROR"
                      },
                      "response": {}
                    }
                  },
                  "Subscription error. INVALID_CARD_NUMBER": {
                    "value": {
                      "error": {
                        "code": 520,
                        "debug_text": "Your card number is not valid.Please update your card number.",
                        "description": "INVALID_CARD_NUMBER"
                      },
                      "response": {}
                    }
                  },
                  "Success": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "purchase": {
                          "created_dt": "2020-11-19T02:06:26",
                          "event_status": "active",
                          "expire_dt": "2020-11-26T02:06:24",
                          "is_active": true,
                          "order_id": "in_1Hp2XUCLpkOhWmMolQBrwxI4",
                          "product_id": "price_1HowfGCLpkOhWmMoxHrYUegx",
                          "purchase_token": "sub_IPsIZfJVsVokKS",
                          "status": "other",
                          "type": "recurly",
                          "updated_dt": "2020-11-19T02:06:26"
                        }
                      }
                    }
                  },
                  "Transaction error": {
                    "value": {
                      "error": {
                        "code": 522,
                        "debug_text": "Transaction error while purchase create...",
                        "description": "TRANSACTION_ERROR"
                      },
                      "response": {
                        "three_d_secure_action_token_id": "STZUxb_QYbpzBydwROMf3Q"
                      }
                    }
                  },
                  "Validation error": {
                    "value": {
                      "error": {
                        "code": 500,
                        "debug_text": "1 validation error for .....",
                        "description": "FIELDS_VALIDATION_ERROR"
                      },
                      "response": {}
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/3de297c.SubscriptionRes"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {},
                "schema": {
                  "$ref": "#/components/schemas/6a07bef.UnprocessableEntity"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": null,
        "summary": "Create a subscription without logging",
        "tags": [
          "Payments"
        ]
      }
    },
    "/api/payments/gift-cards/activate": {
      "post": {
        "description": "If User not send JWT in header `Authorization` - raise 401 error response",
        "operationId": "post_/api/payments/gift-cards/activate",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/3de297c.GiftActivateReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Gift code used": {
                    "value": {
                      "error": {
                        "code": 409,
                        "debug_text": "Gift code already used",
                        "description": "DATA_EXIST"
                      },
                      "response": {}
                    }
                  },
                  "Gift not found": {
                    "value": {
                      "error": {
                        "code": 404,
                        "debug_text": "Wrong gift code",
                        "description": "NOT_FOUND"
                      },
                      "response": {}
                    }
                  },
                  "Subscription error": {
                    "value": {
                      "error": {
                        "code": 520,
                        "debug_text": "Error in subscription create logic",
                        "description": "SUBSCRIPTION_ERROR"
                      },
                      "response": {}
                    }
                  },
                  "Success": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {}
                    }
                  },
                  "Validation error": {
                    "value": {
                      "error": {
                        "code": 500,
                        "debug_text": "1 validation error for .....",
                        "description": "FIELDS_VALIDATION_ERROR"
                      },
                      "response": {}
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/3de297c.GiftCardActivateRes"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {},
                "schema": {
                  "$ref": "#/components/schemas/6a07bef.UnprocessableEntity"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "jwt_header": []
          }
        ],
        "summary": "Activate GiftCard or GiftCode",
        "tags": [
          "Payments"
        ]
      }
    },
    "/api/payments/gift-cards/create": {
      "post": {
        "description": "Method create gift card (using Recurly items)",
        "operationId": "post_/api/payments/gift-cards/create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/43c6089.GiftCardCreateReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Subscription error": {
                    "value": {
                      "error": {
                        "code": 520,
                        "debug_text": "Error in subscription create logic",
                        "description": "SUBSCRIPTION_ERROR"
                      },
                      "response": {}
                    }
                  },
                  "Subscription error. INVALID_CARD_NUMBER": {
                    "value": {
                      "error": {
                        "code": 520,
                        "debug_text": "Your card number is not valid.Please update your card number.",
                        "description": "INVALID_CARD_NUMBER"
                      },
                      "response": {}
                    }
                  },
                  "Success": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "pdf_link": "https://dev-profile-file.loona.dev/hash_test/test_new.pdf"
                      }
                    }
                  },
                  "Transaction error": {
                    "value": {
                      "error": {
                        "code": 522,
                        "debug_text": "Transaction error while purchase create...",
                        "description": "TRANSACTION_ERROR"
                      },
                      "response": {
                        "three_d_secure_action_token_id": "STZUxb_QYbpzBydwROMf3Q"
                      }
                    }
                  },
                  "Validation error": {
                    "value": {
                      "error": {
                        "code": 500,
                        "debug_text": "1 validation error for .....",
                        "description": "FIELDS_VALIDATION_ERROR"
                      },
                      "response": {}
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/3de297c.GiftCardCreateRes"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {},
                "schema": {
                  "$ref": "#/components/schemas/6a07bef.UnprocessableEntity"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "jwt_header": []
          }
        ],
        "summary": "Create gift card",
        "tags": [
          "Payments"
        ]
      }
    },
    "/api/payments/gift-cards/list": {
      "get": {
        "description": "Method return all active Gift cards from Recurly Items list",
        "operationId": "get_/api/payments/gift-cards/list",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Empty items list": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "items": {}
                      }
                    }
                  },
                  "Success": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "items": {
                          "gift-code-lifetime": {
                            "code": "gift-code-lifetime",
                            "currencies": [
                              {
                                "currency": "USD",
                                "unit_amount": 89.99
                              }
                            ],
                            "description": "Some long description for lifetime tests Loona GiftCard",
                            "name": "[TEST] gift lifetime"
                          },
                          "gift-code-yearly": {
                            "code": "gift-code-yearly",
                            "currencies": [
                              {
                                "currency": "USD",
                                "unit_amount": 39.99
                              }
                            ],
                            "description": "Some long description for tests",
                            "name": "[TEST] gift yearly"
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/3de297c.GiftCardsListRes"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {},
                "schema": {
                  "$ref": "#/components/schemas/6a07bef.UnprocessableEntity"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": null,
        "summary": "Get list of all active Gift cards",
        "tags": [
          "Payments"
        ]
      }
    },
    "/api/system/ping": {
      "get": {
        "description": "Just return - `OK`",
        "operationId": "get_/api/system/ping",
        "parameters": [],
        "responses": {},
        "security": null,
        "summary": "Ping system",
        "tags": [
          "System"
        ]
      }
    },
    "/api/system/ping-db": {
      "get": {
        "description": "Request get last User object from DB and return - `OK`",
        "operationId": "get_/api/system/ping-db",
        "parameters": [],
        "responses": {},
        "security": null,
        "summary": "Ping DB",
        "tags": [
          "System"
        ]
      }
    },
    "/api/system/time": {
      "get": {
        "description": "Get current UTC date-time in `%Y-%m-%dT%H:%M:%S` format",
        "operationId": "get_/api/system/time",
        "parameters": [],
        "responses": {},
        "security": null,
        "summary": "Get current UTC date-time",
        "tags": [
          "System"
        ]
      }
    },
    "/api/user/data": {
      "delete": {
        "description": "",
        "operationId": "delete_/api/user/data",
        "parameters": [
          {
            "description": "Request query value",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/4ac81a8.UserDataDelReqQuery.UserDataTypes"
                }
              ],
              "description": "Request query value"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Data not found. 404": {
                    "value": {
                      "error": {
                        "code": 404,
                        "debug_text": "UserData not found",
                        "description": "NOT_FOUND"
                      },
                      "response": {}
                    }
                  },
                  "Success": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {}
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/4ac81a8.UserDataDelRes"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {},
                "schema": {
                  "$ref": "#/components/schemas/6a07bef.UnprocessableEntity"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "jwt_header": []
          }
        ],
        "summary": "Delete exist user data type",
        "tags": [
          "User"
        ]
      },
      "get": {
        "description": "If set `type` - get certain UserData type or Purchase info\n\nIf NOT set `type` - get all available UserData and last active Purchase",
        "operationId": "get_/api/user/data",
        "parameters": [
          {
            "description": "Request query value",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/4ac81a8.UserDataGetReqQuery.UserDataArgs"
                }
              ],
              "description": "Request query value"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "All data": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "app_state": {
                          "created_dt": "2020-06-23T16:17:05",
                          "data": {
                            "appLaunchCount": 5,
                            "customFeedbackShownCount": 0,
                            "oldAndroidUser": false,
                            "oldUser": false,
                            "oldUserFourChaptersFree": false,
                            "oldUserPremium": true,
                            "ratingWasRequested": false,
                            "runDay": 5,
                            "scratchModeTutorialShown": false
                          },
                          "type": "app_state",
                          "updated_dt": "2021-12-19T20:15:12",
                          "version": "0.0"
                        },
                        "fav_track": {
                          "created_dt": "2020-06-23T16:17:05",
                          "data": {
                            "journeyTime": 845,
                            "streak": 1,
                            "streakMax": 1
                          },
                          "type": "fav_track",
                          "updated_dt": "2021-12-19T20:15:12",
                          "version": "0.0"
                        },
                        "onboarding": {
                          "created_dt": "2020-06-23T16:17:05",
                          "data": {
                            "initial_onboarding": {
                              "bla1": "additional data",
                              "favoriteColors": [
                                "#ffffff",
                                "#ffffff"
                              ]
                            },
                            "initial_onboarding2": {
                              "bla1": [
                                "#bbbbbbb",
                                "#ffffff"
                              ],
                              "favoriteColors": [
                                "#fffffff",
                                "#ffffff"
                              ]
                            }
                          },
                          "type": "onboarding",
                          "updated_dt": "2021-12-19T20:15:12",
                          "version": "0.0"
                        },
                        "purchase": {
                          "autoRenewing": true,
                          "created_dt": "2021-10-22T10:06:16",
                          "event_status": "SUBSCRIPTION_RENEWED",
                          "expire_dt": "2021-12-21T10:06:16",
                          "is_active": true,
                          "order_id": "GPA.3337-2222-3333-97266..5",
                          "product_id": "year-extend-promo-2w-trial",
                          "product_term": "year",
                          "product_trial": "14",
                          "product_type": "auto_renewable",
                          "purchase_token": "jfklnddpnkjn---wO6CpirnA",
                          "status": "renew",
                          "store_type": "google",
                          "type": "recurly",
                          "updated_dt": "2021-10-24T14:06:16"
                        }
                      }
                    }
                  },
                  "All data, no Purchase": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "app_state": {
                          "created_dt": "2020-06-23T16:17:05",
                          "data": {
                            "appLaunchCount": 5,
                            "customFeedbackShownCount": 0,
                            "oldAndroidUser": false,
                            "oldUser": false,
                            "oldUserFourChaptersFree": false,
                            "oldUserPremium": true,
                            "ratingWasRequested": false,
                            "runDay": 5,
                            "scratchModeTutorialShown": false
                          },
                          "type": "app_state",
                          "updated_dt": "2021-12-19T20:15:12",
                          "version": "0.0"
                        },
                        "fav_track": {
                          "created_dt": "2020-06-23T16:17:05",
                          "data": {
                            "journeyTime": 845,
                            "streak": 1,
                            "streakMax": 1
                          },
                          "type": "fav_track",
                          "updated_dt": "2021-12-19T20:15:12",
                          "version": "0.0"
                        },
                        "onboarding": {
                          "created_dt": "2020-06-23T16:17:05",
                          "data": {
                            "initial_onboarding": {
                              "bla1": "additional data",
                              "favoriteColors": [
                                "#ffffff",
                                "#ffffff"
                              ]
                            },
                            "initial_onboarding2": {
                              "bla1": [
                                "#bbbbbbb",
                                "#ffffff"
                              ],
                              "favoriteColors": [
                                "#fffffff",
                                "#ffffff"
                              ]
                            }
                          },
                          "type": "onboarding",
                          "updated_dt": "2021-12-19T20:15:12",
                          "version": "0.0"
                        },
                        "purchase": {}
                      }
                    }
                  },
                  "App state": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "app_state": {
                          "created_dt": "2020-06-23T16:17:05",
                          "data": {
                            "appLaunchCount": 5,
                            "customFeedbackShownCount": 0,
                            "oldAndroidUser": false,
                            "oldUser": false,
                            "oldUserFourChaptersFree": false,
                            "oldUserPremium": true,
                            "ratingWasRequested": false,
                            "runDay": 5,
                            "scratchModeTutorialShown": false
                          },
                          "type": "app_state",
                          "updated_dt": "2021-12-19T20:15:12",
                          "version": "0.0"
                        }
                      }
                    }
                  },
                  "Favorite track": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "fav_track": {
                          "created_dt": "2020-06-23T16:17:05",
                          "data": {
                            "journeyTime": 845,
                            "streak": 1,
                            "streakMax": 1
                          },
                          "type": "fav_track",
                          "updated_dt": "2021-12-19T20:15:12",
                          "version": "0.0"
                        }
                      }
                    }
                  },
                  "Google Purchase": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "purchase": {
                          "autoRenewing": true,
                          "created_dt": "2021-10-22T10:06:16",
                          "event_status": "SUBSCRIPTION_RENEWED",
                          "expire_dt": "2021-12-21T10:06:16",
                          "is_active": true,
                          "order_id": "GPA.3337-2222-3333-97266..5",
                          "product_id": "year-extend-promo-2w-trial",
                          "product_term": "year",
                          "product_trial": "14",
                          "product_type": "auto_renewable",
                          "purchase_token": "jfklnddpnkjn---wO6CpirnA",
                          "status": "renew",
                          "store_type": "google",
                          "type": "google",
                          "updated_dt": "2021-10-24T14:06:16"
                        }
                      }
                    }
                  },
                  "No Purchase": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "purchase": null
                      }
                    }
                  },
                  "Onboarding": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "onboarding": {
                          "created_dt": "2020-06-23T16:17:05",
                          "data": {
                            "initial_onboarding": {
                              "bla1": "additional data",
                              "favoriteColors": [
                                "#ffffff",
                                "#ffffff"
                              ]
                            },
                            "initial_onboarding2": {
                              "bla1": [
                                "#bbbbbbb",
                                "#ffffff"
                              ],
                              "favoriteColors": [
                                "#fffffff",
                                "#ffffff"
                              ]
                            }
                          },
                          "type": "onboarding",
                          "updated_dt": "2021-12-19T20:15:12",
                          "version": "0.0"
                        }
                      }
                    }
                  },
                  "Promotion Purchase": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "purchase": {
                          "autoRenewing": false,
                          "created_dt": "2021-10-22T10:06:16",
                          "event_status": "PURCHASED",
                          "expire_dt": "2021-11-21T10:06:16",
                          "is_active": true,
                          "order_id": "promotion_4c3ec87e-2d5d-43fe-a27d-ae8d828db7a5_0",
                          "product_id": "app.loona.1m.Tester",
                          "product_term": "year",
                          "product_trial": "14",
                          "product_type": "auto_renewable",
                          "purchase_token": "promotion_af4d0306-2e80-4cfd-a304-43eaaba3e94e",
                          "status": "other",
                          "store_type": "promotion",
                          "type": "promotion",
                          "updated_dt": "2021-10-22T10:06:16"
                        }
                      }
                    }
                  },
                  "Recurly Purchase": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "purchase": {
                          "autoRenewing": true,
                          "created_dt": "2021-10-22T10:06:16",
                          "event_status": "NEW_SUBSCRIPTION_NOTIFICATION",
                          "expire_dt": "2021-12-21T10:06:16",
                          "is_active": true,
                          "order_id": "orzehwbz11ge",
                          "product_id": "year-extend-promo-2w-trial",
                          "product_term": "year",
                          "product_trial": "14",
                          "product_type": "auto_renewable",
                          "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
                          "status": "other",
                          "store_type": "recurly",
                          "type": "recurly",
                          "updated_dt": "2021-10-24T14:06:16"
                        }
                      }
                    }
                  },
                  "Recurly Purchase Canceled": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "purchase": {
                          "autoRenewing": false,
                          "created_dt": "2021-10-22T10:06:16",
                          "event_status": "CANCELED_SUBSCRIPTION_NOTIFICATION",
                          "expire_dt": "2021-10-26T10:06:16",
                          "is_active": true,
                          "order_id": "orzehwbz11ge",
                          "product_id": "year-extend-promo-2w-trial",
                          "product_term": "year",
                          "product_trial": "14",
                          "product_type": "auto_renewable",
                          "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
                          "status": "canceled",
                          "store_type": "recurly",
                          "type": "recurly",
                          "updated_dt": "2021-10-24T14:06:16"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/4ac81a8.UserDataGetRes"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "Error. Wrong type.": {
                    "value": {
                      "errors": {
                        "query": {
                          "type": [
                            "Must be one of: prog_chapter, prog_scene, fav_playlist, fav_track, fav_scene, statistic, settings, app_state, music_player, onboarding, purchase."
                          ]
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/4ac81a8.UserDataGet400Res"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {},
                "schema": {
                  "$ref": "#/components/schemas/6a07bef.UnprocessableEntity"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "jwt_header": []
          }
        ],
        "summary": "Get User Data and/or Purchase info",
        "tags": [
          "User"
        ]
      },
      "post": {
        "description": "If newest data exist in DB - get error response wit 409 code(in payload) and newest UserData from DB",
        "operationId": "post_/api/user/data",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/43c6089.UserDataRequestSer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Data exist. 409": {
                    "value": {
                      "error": {
                        "code": 409,
                        "debug_text": "Newest data exist",
                        "description": "DATA_EXIST"
                      },
                      "response": {
                        "created_dt": "2021-10-22T05:06:16.527409",
                        "data": {
                          "journeyTime": 845,
                          "streak": 1,
                          "streakMax": 1
                        },
                        "device": {},
                        "type": "prog_scene",
                        "updated_dt": "2021-10-22T10:06:16.527418",
                        "version": "0.0"
                      }
                    }
                  },
                  "Success": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {}
                    }
                  },
                  "Validation error. 500": {
                    "value": {
                      "error": {
                        "code": 500,
                        "debug_text": {
                          "created_dt": "invalid datetime format"
                        },
                        "description": "FIELDS_VALIDATION_ERROR"
                      },
                      "response": {}
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/4ac81a8.UserDataPostRes"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {},
                "schema": {
                  "$ref": "#/components/schemas/6a07bef.UnprocessableEntity"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "jwt_header": []
          }
        ],
        "summary": "Send User Data for create or update exist data.",
        "tags": [
          "User"
        ]
      }
    },
    "/api/user/info": {
      "get": {
        "description": "Method return authed user info, user OAuth's list and auth method in header under `X-Loona-AuthType`.\nValid auth methods - web, google, facebook, apple or unknown",
        "operationId": "get_/api/user/info",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Success Full": {
                    "value": {
                      "error": {
                        "code": "0",
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "oauths": [
                          {
                            "created_at": "2021-10-22T10:06:16",
                            "email": "user.mail@gmail.com",
                            "provider": "apple",
                            "provider_user_id": "000074.9680b3111e1148658421beb86b532d70.0638"
                          },
                          {
                            "created_at": "2021-10-22T10:06:16",
                            "email": "user.mail@gmail.com",
                            "provider": "facebook",
                            "provider_user_id": "2854200118148984"
                          },
                          {
                            "created_at": "2021-10-22T10:06:16",
                            "email": "user.mail@gmail.com",
                            "provider": "google",
                            "provider_user_id": "114268033339011136503"
                          }
                        ],
                        "user": {
                          "email": "user.mail@gmail.com",
                          "idx": "user_e1a34d21-25f2-4fb0-9e20-a1646da29326",
                          "is_active": true,
                          "last_active_dt": "2021-10-22T10:06:16",
                          "register_dt": "2021-10-17T07:06:16",
                          "username": "User Name"
                        }
                      }
                    }
                  },
                  "Success NO OAuth": {
                    "value": {
                      "error": {
                        "code": "0",
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "oauths": [],
                        "user": {
                          "email": "user.mail@gmail.com",
                          "idx": "user_e1a34d21-25f2-4fb0-9e20-a1646da29326",
                          "is_active": true,
                          "last_active_dt": "2021-10-22T10:06:16",
                          "register_dt": "2021-10-17T07:06:16",
                          "username": "User Name"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/4ac81a8.UserInfoGetRes"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {},
                "schema": {
                  "$ref": "#/components/schemas/6a07bef.UnprocessableEntity"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "jwt_header": []
          }
        ],
        "summary": "Get current User info",
        "tags": [
          "User"
        ]
      },
      "post": {
        "description": "Method update user fields and return authed user info, user OAuth's list and\nauth method in header under `X-Loona-AuthType`.\nValid auth methods - web, google, facebook, apple or unknown\n--------------------\nIf update password - send password confirmation.\n\nIf update email - service send email confirmation link and deactivate account(if no OAuth available)",
        "operationId": "post_/api/user/info",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/4ac81a8.UserInfoReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "EMAIL_USED": {
                    "value": {
                      "error": {
                        "code": 409,
                        "debug_text": {
                          "email": "EMAIL_USED"
                        },
                        "description": "DATA_EXIST"
                      },
                      "response": {}
                    }
                  },
                  "PASSWORD_MISMATCH": {
                    "value": {
                      "error": {
                        "code": "500",
                        "debug_text": {
                          "confirm": "PASSWORD_MISMATCH"
                        },
                        "description": "FIELDS_VALIDATION_ERROR"
                      },
                      "response": {}
                    }
                  },
                  "PASSWORD_WEAK": {
                    "value": {
                      "error": {
                        "code": "500",
                        "debug_text": {
                          "confirm": "PASSWORD_WEAK",
                          "password": "PASSWORD_WEAK"
                        },
                        "description": "FIELDS_VALIDATION_ERROR"
                      },
                      "response": {}
                    }
                  },
                  "Success Full": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "oauths": [
                          {
                            "created_at": "2021-10-22T10:06:16",
                            "email": "user.mail@gmail.com",
                            "provider": "apple",
                            "provider_user_id": "000074.9680b3111e1148658421beb86b532d70.0638"
                          },
                          {
                            "created_at": "2021-10-22T10:06:16",
                            "email": "user.mail@gmail.com",
                            "provider": "facebook",
                            "provider_user_id": "2854200118148984"
                          },
                          {
                            "created_at": "2021-10-22T10:06:16",
                            "email": "user.mail@gmail.com",
                            "provider": "google",
                            "provider_user_id": "114268033339011136503"
                          }
                        ],
                        "user": {
                          "email": "user.mail@gmail.com",
                          "idx": "user_e1a34d21-25f2-4fb0-9e20-a1646da29326",
                          "is_active": true,
                          "last_active_dt": "2021-10-22T10:06:16",
                          "register_dt": "2021-10-17T07:06:16",
                          "username": "User Name"
                        }
                      }
                    }
                  },
                  "Success No OAuth": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "oauths": [],
                        "user": {
                          "email": "user.mail@gmail.com",
                          "idx": "user_e1a34d21-25f2-4fb0-9e20-a1646da29326",
                          "is_active": true,
                          "last_active_dt": "2021-10-22T10:06:16",
                          "register_dt": "2021-10-17T07:06:16",
                          "username": "User Name"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/4ac81a8.UserInfoPostRes"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {
                  "Success": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {}
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/43c6089.ResponseSer"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "jwt_header": []
          }
        ],
        "summary": "Update User model fields",
        "tags": [
          "User"
        ]
      }
    },
    "/api/user/purchase": {
      "get": {
        "description": "If set `purchase_token` - search Purchase with this token and User(if user logged, else - not use User in search)\n\nIf NOT set `purchase_token` - User MUST be logged and service will be searching for User ACTIVE Purchase.",
        "operationId": "get_/api/user/purchase",
        "parameters": [
          {
            "description": "Unique purchase token from payment system",
            "in": "query",
            "name": "purchase_token",
            "required": false,
            "schema": {
              "description": "Unique purchase token from payment system",
              "title": "Purchase Token",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Google Purchase": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "purchase": {
                          "autoRenewing": true,
                          "created_dt": "2021-10-22T10:06:16",
                          "event_status": "SUBSCRIPTION_RENEWED",
                          "expire_dt": "2021-12-21T10:06:16",
                          "is_active": true,
                          "order_id": "GPA.3337-2222-3333-97266..5",
                          "product_id": "year-extend-promo-2w-trial",
                          "product_term": "year",
                          "product_trial": "14",
                          "product_type": "auto_renewable",
                          "purchase_token": "jfklnddpnkjn---wO6CpirnA",
                          "status": "renew",
                          "store_type": "google",
                          "type": "google",
                          "updated_dt": "2021-10-24T14:06:16"
                        }
                      }
                    }
                  },
                  "No Purchase": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "purchase": null
                      }
                    }
                  },
                  "Promotion Purchase": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "purchase": {
                          "autoRenewing": false,
                          "created_dt": "2021-10-22T10:06:16",
                          "event_status": "PURCHASED",
                          "expire_dt": "2021-11-21T10:06:16",
                          "is_active": true,
                          "order_id": "promotion_4c3ec87e-2d5d-43fe-a27d-ae8d828db7a5_0",
                          "product_id": "app.loona.1m.Tester",
                          "product_term": "year",
                          "product_trial": "14",
                          "product_type": "auto_renewable",
                          "purchase_token": "promotion_af4d0306-2e80-4cfd-a304-43eaaba3e94e",
                          "status": "other",
                          "store_type": "promotion",
                          "type": "promotion",
                          "updated_dt": "2021-10-22T10:06:16"
                        }
                      }
                    }
                  },
                  "Recurly Purchase": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "purchase": {
                          "autoRenewing": true,
                          "created_dt": "2021-10-22T10:06:16",
                          "event_status": "NEW_SUBSCRIPTION_NOTIFICATION",
                          "expire_dt": "2021-12-21T10:06:16",
                          "is_active": true,
                          "order_id": "orzehwbz11ge",
                          "product_id": "year-extend-promo-2w-trial",
                          "product_term": "year",
                          "product_trial": "14",
                          "product_type": "auto_renewable",
                          "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
                          "status": "other",
                          "store_type": "recurly",
                          "type": "recurly",
                          "updated_dt": "2021-10-24T14:06:16"
                        }
                      }
                    }
                  },
                  "Recurly Purchase Canceled": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "purchase": {
                          "autoRenewing": false,
                          "created_dt": "2021-10-22T10:06:16",
                          "event_status": "CANCELED_SUBSCRIPTION_NOTIFICATION",
                          "expire_dt": "2021-10-26T10:06:16",
                          "is_active": true,
                          "order_id": "orzehwbz11ge",
                          "product_id": "year-extend-promo-2w-trial",
                          "product_term": "year",
                          "product_trial": "14",
                          "product_type": "auto_renewable",
                          "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
                          "status": "canceled",
                          "store_type": "recurly",
                          "type": "recurly",
                          "updated_dt": "2021-10-24T14:06:16"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/4ac81a8.UserPurchaseGetRes"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {},
                "schema": {
                  "$ref": "#/components/schemas/6a07bef.UnprocessableEntity"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": null,
        "summary": "Get User Purchase",
        "tags": [
          "User"
        ]
      },
      "post": {
        "description": "Service search Purchase with received `purchase_token`,\n    if Purchase already exists - update expire_dt, Purchase user owner, and purchase type.\n\nIf Purchase is new - create it and bind to auth user.",
        "operationId": "post_/api/user/purchase",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/4ac81a8.UserPurchaseReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "Google Purchase": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "purchase": {
                          "autoRenewing": true,
                          "created_dt": "2021-10-22T10:06:16",
                          "event_status": "SUBSCRIPTION_RENEWED",
                          "expire_dt": "2021-12-21T10:06:16",
                          "is_active": true,
                          "order_id": "GPA.3337-2222-3333-97266..5",
                          "product_id": "year-extend-promo-2w-trial",
                          "product_term": "year",
                          "product_trial": "14",
                          "product_type": "auto_renewable",
                          "purchase_token": "jfklnddpnkjn---wO6CpirnA",
                          "status": "renew",
                          "store_type": "google",
                          "type": "google",
                          "updated_dt": "2021-10-24T14:06:16"
                        }
                      }
                    }
                  },
                  "Promotion Purchase": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "purchase": {
                          "autoRenewing": false,
                          "created_dt": "2021-10-22T10:06:16",
                          "event_status": "PURCHASED",
                          "expire_dt": "2021-11-21T10:06:16",
                          "is_active": true,
                          "order_id": "promotion_4c3ec87e-2d5d-43fe-a27d-ae8d828db7a5_0",
                          "product_id": "app.loona.1m.Tester",
                          "product_term": "year",
                          "product_trial": "14",
                          "product_type": "auto_renewable",
                          "purchase_token": "promotion_af4d0306-2e80-4cfd-a304-43eaaba3e94e",
                          "status": "other",
                          "store_type": "promotion",
                          "type": "promotion",
                          "updated_dt": "2021-10-22T10:06:16"
                        }
                      }
                    }
                  },
                  "Purchase Already Exist": {
                    "value": {
                      "error": {
                        "code": 409,
                        "debug_text": "User purchase data exist",
                        "description": "DATA_EXIST"
                      },
                      "response": {
                        "purchase": {
                          "autoRenewing": true,
                          "created_dt": "2021-10-22T10:06:16",
                          "event_status": "SUBSCRIPTION_RENEWED",
                          "expire_dt": "2021-12-21T10:06:16",
                          "is_active": true,
                          "order_id": "GPA.3337-2222-3333-97266..5",
                          "product_id": "year-extend-promo-2w-trial",
                          "product_term": "year",
                          "product_trial": "14",
                          "product_type": "auto_renewable",
                          "purchase_token": "jfklnddpnkjn---wO6CpirnA",
                          "status": "renew",
                          "store_type": "google",
                          "type": "recurly",
                          "updated_dt": "2021-10-24T14:06:16"
                        }
                      }
                    }
                  },
                  "Recurly Purchase": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "purchase": {
                          "autoRenewing": true,
                          "created_dt": "2021-10-22T10:06:16",
                          "event_status": "NEW_SUBSCRIPTION_NOTIFICATION",
                          "expire_dt": "2021-12-21T10:06:16",
                          "is_active": true,
                          "order_id": "orzehwbz11ge",
                          "product_id": "year-extend-promo-2w-trial",
                          "product_term": "year",
                          "product_trial": "14",
                          "product_type": "auto_renewable",
                          "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
                          "status": "other",
                          "store_type": "recurly",
                          "type": "recurly",
                          "updated_dt": "2021-10-24T14:06:16"
                        }
                      }
                    }
                  },
                  "Recurly Purchase Canceled": {
                    "value": {
                      "error": {
                        "code": 0,
                        "debug_text": "NONE",
                        "description": "NONE"
                      },
                      "response": {
                        "purchase": {
                          "autoRenewing": false,
                          "created_dt": "2021-10-22T10:06:16",
                          "event_status": "CANCELED_SUBSCRIPTION_NOTIFICATION",
                          "expire_dt": "2021-10-26T10:06:16",
                          "is_active": true,
                          "order_id": "orzehwbz11ge",
                          "product_id": "year-extend-promo-2w-trial",
                          "product_term": "year",
                          "product_trial": "14",
                          "product_type": "auto_renewable",
                          "purchase_token": "5a82bc31222227756ed5e3442f8d30ac",
                          "status": "canceled",
                          "store_type": "recurly",
                          "type": "recurly",
                          "updated_dt": "2021-10-24T14:06:16"
                        }
                      }
                    }
                  },
                  "TYPE_INVALID": {
                    "value": {
                      "error": {
                        "code": 500,
                        "debug_text": {
                          "type": "TYPE_INVALID"
                        },
                        "description": "FIELDS_VALIDATION_ERROR"
                      },
                      "response": {}
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/4ac81a8.UserPurchasePostRes"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "examples": {},
                "schema": {
                  "$ref": "#/components/schemas/6a07bef.UnprocessableEntity"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "jwt_header": []
          }
        ],
        "summary": "Create new Purchase",
        "tags": [
          "User"
        ]
      }
    }
  },
  "security": null,
  "tags": [
    {
      "name": "Payments"
    },
    {
      "name": "System"
    },
    {
      "name": "Auth"
    },
    {
      "name": "User"
    }
  ]
}